{"version":3,"sources":["Lib.js","game/PanelHeader.js","game/PanelWarriors.js","game/PanelAbout.js","game/PanelMenu.js","game/PanelSell.js","game/PanelMint.js","game/PanelManage.js","game/Home.js","App.js","serviceWorker.js","index.js","Data.js","BlockLib.js"],"names":["msg","a","Toastify","backgroundColor","gravity","position","text","showToast","ms","Promise","resolve","reject","setTimeout","key","val","window","localStorage","getItem","setItem","clear","delay","openUrl","url","open","focus","getStorageValue","setStorageValue","clearStorageValue","remainingText","seconds","secs","numDays","Math","floor","numHours","numMinute","ret","Lib","require","USDT","IMG_DATA","TOKEN","GAS","TOKEN_NAME","isWalletAvailable","connectToWallet","subscribeWalletData","publishWalletData","PanelHeader","props","state","show","this","busy","interval","setInterval","refresh","available","haveConnectedBefore","connectWallet","console","error","message","toUpperCase","setState","clearInterval","data","usdt","token","gas","right","View","style","alignItems","ActivityIndicator","Text","color","title","onPress","padding","flexDirection","justifyContent","textAlign","fontWeight","React","Component","IMG_WIDE","PanelWarriors","s","fontSize","index","flex","ImageBackground","source","uri","resizeMode","name","power","mint","chance","imgData","rows1d","i","length","id","mintFee","img","push","rows2d","cells","rows","map","cols","cell","renderCell","PanelAbout","PanelMenu","isConnectedToNetwork","handleShow","ss","paddingVertical","size","tokenToCoin","getFloorPrice","getGrowth","sell","getAllowanceSell","approveSell","openExplorerTx","PanelReward","modalVisible","floorPrice","sellAmount","coinReceived","allowSell","pctg","age","pctgDaily","pctgYearly","refreshAllowance","value","amount","txHash","indicator","type","isVisible","onBackdropPress","approveDisabled","Number","sellDisabled","ageDays","renderModal","placeholder","onChangeText","setSellAmount","keyboardType","disabled","handleApprove","width","handleSell","handleHome","getAllowanceMint","approveMint","mintingFee","startIndex","allowMint","item","marginHorizontal","Image","height","mintEnabled","mintDisabled","arr1","ii","arr2","checked","selectMintingFee","iconType","checkedIcon","uncheckedIcon","renderChance","approve","handleMint","burn","getOwnedNFT","getNextSessionTime","openExplorerNft","retrieveReward","PanelManage","getNFTDetail","currentIndex","nfts","nextSessionTime","ticker","newTicker","dataList","nftId","earning","renderBusy","totalIndex","content","enablePrev","enableNext","enableExplore","enableEarn","enableBurn","earningMsg","burningMsg","btnBurnText","noPenaltyTime","collateral","totalEarning","totalEarningUsd","image","remainingSecsEarning","remainingSecsPenalty","now","moment","unix","format","txt","paddingHorizontal","handleRetrieveReward","handleBurn","theme","colors","primary","Home","json","renderError","Dimensions","get","ScrollView","PanelMint","PanelSell","TouchableOpacity","App","landscape","w","screen","ww","wh","h","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","j","star","replace","module","exports","cfx","account","cusdtContract","tokenContract","warriorContract","warContract","mountainContract","BN","ethers","BigNumber","CUSDT_ADDRESS","constants","MaxUint256","TESTNET","TOKEN_ADDRESS","WARRIOR_ADDRESS","WAR_ADDRESS","MOUNTAIN_ADDRESS","ERC20_ABI","abi","WARRIOR_ABI","WAR_ABI","MOUNTAIN_ABI","conflux","isConfluxPortal","Conflux","networkId","provider","send","accounts","Contract","address","Error","getWalletData","getBalance","gasBalance","utils","formatEther","toString","balanceOf","cusdtBalance","tokenBalance","walletDataSubscribers","cb","approveAmount","parseUnits","sendTransaction","from","executed","tx","transactionHash","allowance","amountCoin","summon","price","getStat","stats","startTime","startPrice","endPrice","diffPrice","sub","mul","div","toNumber","amountToken","buyBack","num","tokenOfOwnerByIndex","getDetailNFT","detail","toEth","bn","tokenURI","axios","response","getNftStat","warStat","claimedEarning","warriorStat","createdTime","noFeeUnsummonTime","rarity","getTotalReward","totalReward","add","stat","ts","withdrawReward","unsummon"],"mappings":"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","file":"static/js/main.ee3b24f4.chunk.js","sourcesContent":["import Toastify from 'toastify-js';\nimport 'toastify-js/src/toastify.css';\n\nasync function showToast(msg) {\n  Toastify({\n    backgroundColor: 'black',\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    text: msg\n  }).showToast();\n}\n\nasync function delay(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  })\n}\n\n// async function getLogger() {\n//   return console;\n// }\n\nasync function getStorageValue(key) {\n  const val = window.localStorage.getItem(key);\n  return val;\n}\n\nasync function setStorageValue(key, val) {\n  window.localStorage.setItem(key, val);\n}\n\nasync function clearStorageValue() {\n  window.localStorage.clear();\n}\n\nfunction openUrl(url) {\n  const win = window.open(url, '_blank');\n  win.focus();\n}\n\nfunction remainingText(seconds) {\n  let secs = seconds;\n  let numDays = Math.floor(secs / (3600 * 24));\n  secs = secs - (numDays * 3600 * 24);\n  let numHours = Math.floor(secs / 3600);\n  secs = secs - (numHours * 3600);\n  let numMinute = Math.floor(secs / 60);\n  secs = secs - (numMinute * 60);\n  let numSeconds = secs;\n  let ret = '';\n  if (numDays > 0) ret += (numDays + ' days ');\n  if (numHours > 0) ret += (numHours + ' hours ');\n  if (numMinute > 0) ret += (numMinute + ' minutes ');\n  if (numSeconds > 0) ret += (numSeconds + ' seconds');\n  return ret;\n}\n\nexport default {\n  delay,\n  openUrl,\n  showToast,\n  getStorageValue,\n  setStorageValue,\n  clearStorageValue,\n  remainingText\n};\n\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button } from 'react-native-elements';\nimport Lib from '../Lib';\n\nconst { showToast, getStorageValue, setStorageValue, clearStorageValue } = Lib;\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME, GAS } = require('../Data');\nconst { isWalletAvailable, connectToWallet, subscribeWalletData, publishWalletData } = require('../BlockLib');\n\nclass PanelHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.busy = false;\n    this.interval = setInterval(() => this.refresh(), 3000);\n    try {\n      const available = await isWalletAvailable();\n      const haveConnectedBefore = await getStorageValue('HAVE_CONNECTED_BEFORE');\n      if (available && haveConnectedBefore) {\n        return await this.connectWallet();\n      }\n    } catch (err) {\n      // todo: popup error\n      console.error(err);\n      if (err.message) showToast(err.message.toUpperCase());\n    }\n\n    await clearStorageValue();\n    this.setState({\n      show: 'disconnected'\n    });\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async refresh() {\n    if (this.state.show !== 'connected') return;\n    if (this.busy) return;\n    this.busy = true;\n\n    // todo here ??\n\n    this.busy = false;\n  }\n\n  async connectWallet() {\n    this.setState({ show: 'busy' });\n    try {\n      await connectToWallet();\n      await setStorageValue('HAVE_CONNECTED_BEFORE', true);\n      subscribeWalletData((data) => {\n        this.setState({\n          show: 'connected',\n          usdt: data.usdt,\n          token: data.token,\n          gas: data.gas\n        });\n      })\n      return await publishWalletData();\n    } catch (err) {\n      // todo: popup error\n      console.error(err);\n      if (err.message) showToast(err.message.toUpperCase());\n    }\n\n    await clearStorageValue();\n    this.setState({\n      show: 'disconnected'\n    });\n  }\n\n  render() {\n    let right;\n\n    if (this.state.show === 'busy') {\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <ActivityIndicator />\n        </View>\n      );\n    } else if (this.state.show === 'connected') {\n      const token = this.state.token;\n      const usdt = this.state.usdt;\n      const gas = this.state.gas;\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <Text style={{ color: 'white' }}>{token} {TOKEN} | {usdt} {USDT} | {gas} {GAS}</Text>\n        </View>\n      );\n    } else {\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <Button title=\"CONNECT\" onPress={() => this.connectWallet()} />\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ padding: 20, backgroundColor: 'gray'}}>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n          <View>\n            <Text style={{ textAlign: 'left', color: 'white', fontWeight: 'bold' }}>RTK WARRIORS</Text>\n          </View>\n          {right}\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelHeader;\n","import { randomBytes } from '@ethersproject/random';\nimport React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator, ImageBackground } from 'react-native';\nimport { CheckBox, Button, Avatar } from 'react-native-elements';\n\nconst { IMG_DATA, IMG_WIDE, USDT } = require('../Data');\n\nclass PanelWarriors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  renderCell(data) {\n    const s = { textAlign: 'center', fontSize: 10, color: 'white', fontWeight: 'bold' };\n    let m = 1.7;\n    return (\n      <View key={data.index} style={{ flex: 1, padding: 10 }}>\n        <ImageBackground source={{\n          uri: data.url,\n        }} resizeMode=\"cover\" style={{ flex: 1, padding: 10 }} >\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text style={s}>{data.name.toUpperCase()}</Text>\n          <Text style={s}>POWER: {data.power}</Text>\n          <Text style={s}>{data.mint} {USDT}</Text>\n          <Text style={s}>{data.chance}%</Text>\n        </ImageBackground>\n      </View >\n    );\n  }\n\n  render() {\n    const imgData = IMG_DATA;\n    const rows1d = [];\n\n    for (let i = 0; i < imgData.length; i++) {\n      const id = imgData[i];\n      const name = id.name;\n      const mint = id.mintFee;\n      const power = id.power;\n      const chance = id.chance;\n\n      let url = id.img;\n\n      if (i === 0) {\n        url = IMG_WIDE;\n      }\n\n      rows1d.push({ index: i, name, power, mint, chance, url });\n\n    }\n\n    let rows2d = [];\n    let cells = [];\n    for (let i = 0; i < rows1d.length; i++) {\n      cells.push(rows1d[i]);\n      if (i == 0) {\n        rows2d.push(cells);\n        cells = [];\n      } else {\n        if (cells.length === 3) {\n          rows2d.push(cells);\n          cells = [];\n        }\n      }\n    }\n\n    if (cells.length > 0) {\n      rows2d.push(cells);\n    }\n\n    const rows = rows2d;\n\n    return (\n      <View style={{ backgroundColor: 'black' }}>\n        {rows.map((cols, index) =>\n          <View key={index} style={{ flexDirection: 'row' }}>\n            {cols.map((cell) => this.renderCell(cell))}\n          </View>\n        )}\n      </View>\n    );\n  }\n\n}\n\nexport default PanelWarriors;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button } from 'react-native-elements';\n\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\n\nclass PanelAbout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    const msg = 'RTK Warriors are NFT collections that generate ' + TOKEN_NAME + ' (' + TOKEN + ') based on its power. RTK Warriors also return 100% minting cost when burned after 30 days.';\n    const msg2 = 'Dragon Token is revenue stream token with rising price support. Current support price is ' + USDT + '.';\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        <Text style={{ textAlign: 'center', fontWeight: 'bold' }}>ABOUT</Text>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>{msg.toUpperCase()}</Text>\n        <Text> </Text>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelAbout;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button, Icon } from 'react-native-elements';\nimport { isConnectedToNetwork } from '../BlockLib';\nimport Lib from '../Lib';\n\nconst { showToast, getStorageValue, setStorageValue } = Lib;\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\n\nclass PanelMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  async handleShow(show) {\n    const isConnected = await isConnectedToNetwork();\n    if (!isConnected) {\n      return showToast('NOT CONNECTED TO NETWORK');\n    }\n    this.props.handleShow(show)\n  }\n\n  render() {\n    const ss = { flex: 1, justifyContent: 'center', paddingVertical: 10 };\n    return (\n      <View style={{ padding: 5, backgroundColor: '#eee' }}>\n        <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='collections' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>OWNED WARRIORS</Text></View>\n            <Button title=\"MANAGE\" onPress={() => this.handleShow('MANAGE')} />\n          </View>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='account-circle' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>NEW WARRIOR</Text></View>\n            <Button title=\"MINT\" onPress={() => this.handleShow('MINT')} />\n          </View>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='account-balance-wallet' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>{TOKEN_NAME.toUpperCase()}</Text></View>\n            <Button title=\"SWAP\" onPress={() => this.handleShow('SELL')} />\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelMenu;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport { Button, Input } from 'react-native-elements';\nimport Modal from 'modal-enhanced-react-native-web';\n\nconst { USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { tokenToCoin, getFloorPrice, getGrowth, sell, getAllowanceSell, approveSell, openExplorerTx, publishWalletData } = require('../BlockLib');\n\nclass PanelReward extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      modalVisible: false,\n      floorPrice: 0,\n      sellAmount: null,\n      coinReceived: 0,\n      allowSell: 0,\n      pctg: 0\n    };\n  }\n\n  async componentDidMount() {\n    const floorPrice = await getFloorPrice();\n    const { age, pctg, pctgDaily, pctgYearly } = await getGrowth();\n    this.setState({ floorPrice, show: 'form', age, pctg, pctgDaily, pctgYearly });\n    this.refreshAllowance();\n\n    this.interval = setInterval(async () => {\n      const floorPrice = await getFloorPrice();\n      const { age, pctg, pctgDaily, pctgYearly } = await getGrowth();\n      this.setState({ floorPrice, age, pctg, pctgDaily, pctgYearly });\n    }, 5000);\n\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async setSellAmount(value) {\n    const amount = value;\n    this.setState({ sellAmount: amount });\n    const coinReceived = await tokenToCoin(amount);\n    this.setState({ coinReceived });\n  }\n\n  async refreshAllowance() {\n    const allowSell = await getAllowanceSell();\n    this.setState({ allowSell });\n  }\n\n  async handleApprove() {\n    try {\n      const sellAmount = this.state.sellAmount;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await approveSell(sellAmount);\n      this.refreshAllowance();\n      this.setState({ txHash });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleSell() {\n    const sellAmount = this.state.sellAmount;\n    this.setState({ modalVisible: true, txHash: false });\n    const txHash = await sell(sellAmount);\n    this.refreshAllowance();\n    await publishWalletData();\n    this.setState({ txHash });\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            <View>\n              {indicator}\n              <Text> </Text>\n              <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            </View>\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    let approveDisabled = false;\n    if (Number(this.state.allowSell) >= Number(this.state.sellAmount)) {\n      approveDisabled = true;\n    }\n\n    let sellDisabled = !approveDisabled;\n\n    if (this.state.sellAmount > 0) {\n    } else {\n      sellDisabled = true;\n    }\n\n    const ageDays = Math.floor((this.state.age / (3600 * 24)) * 100) / 100;\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center', fontWeight: 'bold' }}>SUPPORT PRICE DATA</Text>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>CONTRACT AGE {ageDays} DAYS</Text>\n        <Text style={{ textAlign: 'center' }}>PRICE GROWTH {this.state.pctg} %</Text>\n        <Text style={{ textAlign: 'center' }}>AVG. DAILY GROWTH {this.state.pctgDaily} %</Text>\n        <Text style={{ textAlign: 'center' }}>AVG. ANNUAL GROWTH {this.state.pctgYearly} %</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        <Text style={{ textAlign: 'center' }}>{TOKEN_NAME.toUpperCase()} SUPPORT PRICE</Text>\n        <Text style={{ textAlign: 'center' }}>1 {TOKEN} = {this.state.floorPrice} {USDT}</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        <Input\n          placeholder={'ENTER ' + TOKEN + ' AMOUNT'}\n          onChangeText={value => this.setSellAmount(value)}\n          value={this.state.sellAmount}\n          keyboardType='numeric'\n        />\n        <Text style={{ textAlign: 'center' }}>SWAP FOR {this.state.coinReceived} {USDT}</Text>\n        <Text style={{ textAlign: 'center' }}></Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={approveDisabled} title=\"APPROVE\" onPress={() => this.handleApprove()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={sellDisabled} title=\"SWAP\" onPress={() => this.handleSell()} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelReward;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button, Input, Avatar } from 'react-native-elements';\n\nimport Modal from 'modal-enhanced-react-native-web';\nimport Lib from '../Lib';\n\nconst { IMG_DATA, USDT } = require('../Data');\nconst { mint, getAllowanceMint, approveMint, openExplorerTx, publishWalletData } = require('../BlockLib');\n\nconst { showToast, getStorageValue, setStorageValue } = Lib;\n\nclass PanelReward extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      txHash: false,\n      mintingFee: 10000,\n      startIndex: 0,\n      allowMint: 0\n    };\n  }\n\n  async componentDidMount() {\n    const allowMint = await getAllowanceMint();\n    this.setState({ show: 'form', allowMint });\n  }\n\n  componentWillMount() {\n  }\n\n  async selectMintingFee(mintingFee, index) {\n    this.setState({ mintingFee, startIndex: (index * 5) })\n  }\n\n  async approve() {\n    try {\n      const mintingFee = this.state.mintingFee;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await approveMint(mintingFee);\n      const allowMint = await getAllowanceMint();\n      this.setState({ txHash, allowMint });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n      this.setState({ modalVisible: false })\n    }\n  }\n\n  async handleMint() {\n    try {\n      const mintingFee = this.state.mintingFee;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await mint(mintingFee);\n      await publishWalletData();\n      const allowMint = await getAllowanceMint();\n      this.setState({ txHash, allowMint });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n      this.setState({ modalVisible: false })\n    }\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderChance(item) {\n    const imgData = IMG_DATA;\n    const url = imgData[(item.index + this.state.startIndex)].img;\n\n    const styleAvatar = { flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginHorizontal: 5 };\n    return (\n      <View style={styleAvatar}>\n        {/* <Avatar\n          rounded\n          size={'large'}\n          source={{\n            uri: url\n          }}\n        /> */}\n        <Image source={{\n          uri: url,\n        }} resizeMode=\"contain\" style={{ width: 80, height: 80 }} />\n\n        <Text>{item.pctg}%</Text>\n      </View>);\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            {indicator}\n            <Text> </Text>\n            <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    const mintEnabled = (Number(this.state.allowMint) >= this.state.mintingFee);\n    let approveDisabled = mintEnabled;\n    let mintDisabled = !mintEnabled;\n\n    const ii = 0;\n    const arr1 = [{ pctg: 1, index: ii + 0 }, { pctg: 7, index: ii + 1 }];\n    const arr2 = [{ pctg: 13, index: ii + 2 }, { pctg: 19, index: ii + 3 }, { pctg: 60, index: ii + 4 }];\n    const arr3 = [10000, 1000, 100, 10, 1];\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>SELECT MINTING FEE</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        {arr3.map((item, index) => {\n          return (\n            <CheckBox title={item + ' ' + USDT}\n              checked={(this.state.mintingFee === item)}\n              onPress={() => this.selectMintingFee(item, index)}\n              iconType='material'\n              checkedIcon='check-box'\n              uncheckedIcon='check-box-outline-blank'\n            />\n          );\n        })}\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>CHANCE</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          {arr1.map((item) => this.renderChance(item))}\n        </View>\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          {arr2.map((item) => this.renderChance(item))}\n        </View>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>BURN LATER TO RETRIEVE 100% MINTING FEE BACK</Text>\n        <Text style={{ textAlign: 'center' }}>(5% PINALTY WHEN BURN BEFORE 30 DAYS)</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={approveDisabled} title=\"APPROVE\" onPress={() => this.approve()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={mintDisabled} title=\"MINT\" onPress={() => this.handleMint()} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelReward;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator, ImageBackground } from 'react-native';\nimport { CheckBox, Button, Input, Avatar } from 'react-native-elements';\nimport moment from 'moment';\nimport Modal from 'modal-enhanced-react-native-web';\nimport Lib from '../Lib';\n\nconst { remainingText, showToast } = Lib;\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { burn, getOwnedNFT, getNextSessionTime, openExplorerNft, retrieveReward, publishWalletData, openExplorerTx, getNFTDetail } = require('../BlockLib');\n\nclass PanelManage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      currentIndex: 0,\n      nfts: [],\n      nextSessionTime: 0,\n      ticker: 0\n    };\n  }\n\n  async componentDidMount() {\n    const nfts = await getOwnedNFT();\n    const nextSessionTime = await getNextSessionTime();\n    this.setState({ show: 'list', nfts, nextSessionTime });\n\n    this.interval = setInterval(() => {\n      const newTicker = this.state.ticker + 1;\n      this.setState({ ticker: newTicker });\n    }, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async refresh() {\n\n  }\n\n  async handleRetrieveReward() {\n    const dataList = this.state.nfts;\n    const currentIndex = this.state.currentIndex;\n    const nftId = dataList[currentIndex].nftId;\n\n    try {\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await retrieveReward(nftId);\n      await publishWalletData();\n      const nfts = await getOwnedNFT();\n      this.setState({ txHash, nfts });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleBurn() {\n    const dataList = this.state.nfts;\n    const currentIndex = this.state.currentIndex;\n    const nftId = dataList[currentIndex].nftId;\n    const earning = Number(dataList[currentIndex].earning);\n\n    if (earning > 0) return showToast('retrieve earning first'.toUpperCase());\n\n    try {\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await burn(nftId);\n      await publishWalletData();\n      const nfts = await getOwnedNFT();\n      this.setState({ txHash, nfts, currentIndex: 0 });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>QUERYING OWNED NFTS</Text>\n        <Text> </Text>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            <View>\n              {indicator}\n              <Text> </Text>\n              <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            </View>\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    if (this.state.show === 'busy') return this.renderBusy();\n    const dataList = this.state.nfts;\n\n    const totalIndex = dataList.length;\n    const currentIndex = this.state.currentIndex;\n    const nextSessionTime = this.state.nextSessionTime;\n\n    let content = (\n      <View>\n        <Text style={{ textAlign: 'center' }}>NOT OWNED ANY WARRIORS</Text>\n        <Text> </Text>\n      </View>\n    );\n    let title = 'WARRIORS OWNED (0/0)';\n\n    let enablePrev = false;\n    let enableNext = false;\n    let enableExplore = false;\n    let enableEarn = false;\n    let enableBurn = false;\n\n    let earningMsg = <Text> </Text>;\n    let burningMsg = <Text> </Text>;\n    let btnBurnText = 'BURN';\n\n    if (dataList.length > 0) {\n      const data = dataList[currentIndex];\n      const nftId = data.nftId;\n      const power = data.power;\n      const earning = Number(data.earning);\n      const noPenaltyTime = Number(data.noPenaltyTime);\n      const collateral = data.collateral;\n      const age = data.age;\n      const totalEarning = data.totalEarning;\n      const totalEarningUsd = data.totalEarningUsd;\n      const pctg = data.pctg;\n      const pctgDaily = data.pctgDaily;\n      const pctgYearly = data.pctgYearly;\n\n\n      let name = data.name;\n      let url = data.image;\n\n      // const imgData = IMG_DATA;\n      // for (let i = 0; i < imgData.length; i++) {\n      //   const id = imgData[i];\n      //   if (id.power === power) {\n      //     name = id.name;\n      //     url = id.img;\n      //   }\n      // }\n\n      enablePrev = (currentIndex > 0);\n      enableNext = (currentIndex < totalIndex - 1);\n      enableExplore = true;\n      enableEarn = (earning > 0);\n      enableBurn = true;\n\n      let remainingSecsEarning = 0;\n      let remainingSecsPenalty = 0;\n\n      const now = moment().unix();\n      if (now < noPenaltyTime) {\n        remainingSecsPenalty = noPenaltyTime - now;\n      }\n      if (now < nextSessionTime) {\n        remainingSecsEarning = nextSessionTime - now;\n      }\n\n      earningMsg = (\n        <View>\n          <Text> </Text>\n          <Text style={{ textAlign: 'center' }}>EARNING WILL BE AVAILABLE AFTER</Text>\n          <Text style={{ textAlign: 'center' }}>{moment.unix(nextSessionTime).format()}</Text>\n          <Text> </Text>\n        </View>\n      );\n\n      if (earning > 0) {\n        earningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>EARNING AVAILABLE</Text>\n            <Text style={{ textAlign: 'center' }}>{earning} {TOKEN}</Text>\n            <Text> </Text>\n          </View>\n        );\n      } else if (remainingSecsEarning > 0) {\n        const txt = remainingText(remainingSecsEarning);\n        earningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>EARNING WILL BE AVAILABLE AFTER</Text>\n            <Text style={{ textAlign: 'center' }}>{txt.toUpperCase()}</Text>\n            <Text> </Text>\n          </View>\n        );\n      }\n\n      if (remainingSecsPenalty > 0) {\n        const txt = remainingText(remainingSecsPenalty);\n        burningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>5% BURN PENALTY APPLIED FOR NEXT</Text>\n            <Text style={{ textAlign: 'center' }}>{txt.toUpperCase()}</Text>\n            <Text> </Text>\n          </View>);\n      }\n\n      btnBurnText = 'BURN TO RECEIVE ' + collateral + ' ' + USDT;\n\n      title = 'WARRIORS OWNED (' + (currentIndex + 1) + '/' + totalIndex + ')';\n\n      content = (\n        <View style={{}}>\n          <Image source={{\n            uri: url,\n          }} resizeMode=\"contain\" style={{ padding: 10, height: 200 }} />\n          <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          </View>\n          <Text style={{ textAlign: 'center' }}> </Text>\n          <Text style={{ textAlign: 'center' }}>{name.toUpperCase()} (#{nftId})</Text>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 30 }}>\n            <Text>POWER</Text>\n            <Text>{power}</Text>\n          </View>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 30 }}>\n            <Text>AGE</Text>\n            <Text>{age} DAYS</Text>\n          </View>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 30 }}>\n            <Text>TOTAL EARNING {TOKEN}</Text>\n            <Text>{totalEarning} ({totalEarningUsd} {USDT})</Text>\n          </View>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 30 }}>\n            <Text>PROFIT</Text>\n            <Text>{pctg} %</Text>\n          </View>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 30 }}>\n            <Text>AVG. DAILY PROFIT</Text>\n            <Text>{pctgDaily} %</Text>\n          </View>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 30 }}>\n            <Text>AVG. ANNUAL PROFIT</Text>\n            <Text>{pctgYearly} %</Text>\n          </View>\n          {earningMsg}\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>{title}</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        {content}\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={!enablePrev} title=\"PREV\" onPress={() => this.setState({ currentIndex: currentIndex - 1 })} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={!enableNext} title=\"NEXT\" onPress={() => this.setState({ currentIndex: currentIndex + 1 })} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{}}><Button disabled={!enableEarn} title=\"RETRIEVE EARNING\" onPress={() => this.handleRetrieveReward()} /></View>\n        {burningMsg}\n        <View style={{}}><Button disabled={!enableBurn} type=\"outline\" title={btnBurnText} onPress={() => this.handleBurn()} /></View>\n        <Text> </Text>\n        <View style={{}}><Button disabled={!enableExplore} type=\"outline\" title=\"EXPLORE\" onPress={() => openExplorerNft()} /></View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelManage;\n","import React from 'react';\nimport { View, Dimensions, Text, ScrollView, ActivityIndicator } from 'react-native';\nimport { ThemeProvider, Button } from 'react-native-elements';\n\nimport PanelHeader from './PanelHeader';\nimport PanelWarriors from './PanelWarriors';\nimport PanelAbout from './PanelAbout';\nimport PanelMenu from './PanelMenu';\nimport PanelSell from './PanelSell';\nimport PanelMint from './PanelMint';\nimport PanelManage from './PanelManage';\n\nimport Modal from 'modal-enhanced-react-native-web';\nimport { TouchableOpacity } from 'react-native-web';\n\nimport Lib from '../Lib';\n\nconst theme = {\n  colors: {\n    primary: 'dimgray'\n  }\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      modalVisible: false,\n      txHash: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'home' });\n  }\n\n  componentWillMount() {\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  handleShow(show) {\n    if (show === 'MANAGE') this.setState({ show: 'manage' });\n    else if (show === 'MINT') this.setState({ show: 'mint' });\n    else if (show === 'SELL') this.setState({ show: 'sell' });\n  }\n\n  render() {\n    const obj = this.state.json;\n    if (this.state.show === 'busy') return this.renderBusy();\n    if (this.state.show === 'error') return this.renderError();\n    const wh = Dimensions.get('window').height;\n\n    let content = (\n      <View style={{ flex: 1, backgroundColor: 'gainsboro' }}>\n        <ScrollView>\n          <PanelAbout />\n          <PanelMenu handleShow={show => this.handleShow(show)} />\n          <PanelWarriors />\n        </ScrollView>\n      </View>\n    );\n\n    if (this.state.show === 'mint') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelMint\n              handleHome={() => this.setState({ show: 'home' })}\n            />\n          </ScrollView>\n        </View>\n      );\n    } else if (this.state.show === 'sell') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelSell handleHome={() => this.setState({ show: 'home' })} />\n          </ScrollView>\n        </View>\n      );\n    } else if (this.state.show === 'manage') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelManage handleHome={() => this.setState({ show: 'home' })} />\n          </ScrollView>\n        </View>\n      );\n    }\n\n    const forumUrl = 'https://forum.conflux.fun/t/rtk-warriors-the-first-conflux-project-built-on-top-flux/11202';\n    const tgUrl = 'https://t.me/rtkwdao';\n    return (\n      <ThemeProvider theme={theme}>\n        <View style={{ flex: 1 }}>\n          <View style={{ padding: 5, backgroundColor: 'red' }}>\n            <Text style={{ fontWeight: 'bold', color: 'white', textAlign: 'center', fontSize: 10 }}>TESTNET NETWORK</Text>\n          </View>\n          <PanelHeader />\n          {content}\n          <View style={{ padding: 10, backgroundColor: 'gray', flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableOpacity onPress={() => Lib.openUrl(forumUrl)}>\n              <Text style={{ color: '#ddd' }}>\n                FORUM\n              </Text>\n            </TouchableOpacity>\n            <Text style={{ color: '#ddd' }}> | </Text>\n            <TouchableOpacity onPress={() => Lib.openUrl(tgUrl)}>\n              <Text style={{ color: '#ddd' }}>\n                TELEGRAM\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { View, Dimensions } from 'react-native';\n\nimport Game from './game/Home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      landscape: false,\n      w: Dimensions.get('window').width\n    };\n  }\n\n  async componentDidMount() {\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    const ww = Dimensions.get('window').width;\n    let wh = Dimensions.get('window').height;\n    const landscape = (ww > wh);\n\n    let w = ww;\n    let h = wh;\n    let screen;\n    if (landscape) {\n      w = wh * 480 / 800;\n      screen = (\n        <View style={{ alignItems: 'center', justifyContent: 'center', width: '100%', height: wh }}>\n          <View style={{ width: w, height: (h - 20) }}>\n            <Game />\n          </View>\n        </View>\n      );\n    } else {\n      screen = (\n        <View style={{ height: h }}>\n          <Game />\n        </View>\n      );\n    }\n    return (\n      <>\n        <style type=\"text/css\">{`\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url(${require('react-native-vector-icons/Fonts/MaterialIcons.ttf')}) format('truetype');\n          }\n        `}</style>\n\n        {screen}\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const imgData = [\n  { name: 'Lu Bu', img: './imgs/lubu.png' },\n  { name: 'Guan Yu', img: './imgs/guanyu.png' },\n  { name: 'Zhao Yun', img: './imgs/zhaoyun.png' },\n  { name: 'Zhang Fei', img: './imgs/zhangfei.png' },\n  { name: 'Ma Chao', img: './imgs/machao.png' },\n  { name: 'Huang Zhong', img: './imgs/huangzhong.png' },\n  { name: 'Xiahou Dun', img: './imgs/xiahoudun.png' },\n  { name: 'Xu Zhu', img: './imgs/xuzhu.png' },\n  { name: 'Xiahou Yuan', img: './imgs/xiahouyuan.png' },\n  { name: 'Zhang Liao', img: './imgs/zhangliao.png' },\n  { name: 'Xu Huang', img: './imgs/xuhuang.png' },\n  { name: 'Zhou Yu', img: './imgs/zhouyu.png' },\n  { name: 'Lu Xun', img: './imgs/luxun.png' },\n  { name: 'Taishi Ci', img: './imgs/taishici.png' },\n  { name: 'Lu Meng', img: './imgs/lumeng.png' },\n  { name: 'Gan Ning', img: './imgs/ganning.png' },\n  { name: 'Jiang Wei', img: './imgs/jiangwei.png' },\n  { name: 'Wei Yan', img: './imgs/weiyan.png' },\n  { name: 'Ma Dai', img: './imgs/madai.png' },\n  { name: 'Zhang He', img: './imgs/zhanghe.png' },\n  { name: 'Cao Ren', img: './imgs/caoren.png' },\n  { name: 'Pang De', img: './imgs/pangde.png' },\n  { name: 'Huang Gai', img: './imgs/huanggai.png' },\n  { name: 'Sun Ce', img: './imgs/sunce.png' },\n  { name: 'Zhou Tai', img: './imgs/zhoutai.png' },\n];\n\nlet index = 0;\nfor (let i = 0; i < imgData.length; i++) {\n  let j = i % 5;\n  let star = 5 - j;\n  const chances = [1, 7, 13, 19, 60];\n  const mulPowers = [140000, 12000, 1100, 105, 10];\n  const basePowers = [100000, 10000, 1000, 100, 10];\n  const mints = [10000, 1000, 100, 10, 1];\n\n  imgData[i].star = star;\n  imgData[i].power = basePowers[index] + (mulPowers[index] * (star - 1));\n  imgData[i].chance = chances[j];\n  imgData[i].mintFee = mints[index];\n  const img = imgData[i].img;\n  imgData[i].img = img.replace('./imgs/', 'https://res.cloudinary.com/dey55ubjm/image/upload/v1633669304/rtkw/');\n  // 'https://fathomless-taiga-78317.herokuapp.com/imgdata/' + i;\n  // https://res.cloudinary.com/dey55ubjm/image/upload/e_auto_contrast/v1633669304/rtkw/zhaoyun.png\n  // 'https://res.cloudinary.com/dey55ubjm/image/upload/v1633669304/rtkw/'\n  if (star === 1) index++;\n\n}\n\nmodule.exports = {\n  GAS: 'CFX',\n  USDT: 'USDT',\n  TOKEN: 'DRG',\n  TOKEN_NAME: 'Dragon Token',\n  IMG_WIDE: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1634395509/rtkw/lubuw.png',\n  IMG_DATA: imgData,\n};\n\n\n","import { Conflux } from 'js-conflux-sdk';\nimport { ethers } from \"ethers\";\nimport Lib from './Lib';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst BN = ethers.BigNumber;\n\nconst MAX_UINT = ethers.constants.MaxUint256;\nconst NETWORK_ID = 1;\nconst FUSDT_ADDRESS = 'cfxtest:acg57abw3cn6113xea1atrth5e496hfe5ugyxjzd30';\nconst CUSDT_ADDRESS = 'cfxtest:acgcdeewrb2gtaxynwbezyfudypzay92cegvx0gj5c';\nconst CFLUX_ADDRESS = 'cfxtest:acg8b8v1waxdkt8u0gce8ux17peepydshun3t5szue';\nconst FLUXMINT_ADDRESS = 'cfxtest:acfbmt9z8aa8bpsdz5pj0dvtnadenz6ynu627y79nw';\n\nconst TESTNET = require('./json/testnet.json');\nconst TOKEN_ADDRESS = TESTNET.TOKEN_ADDRESS;\nconst WARRIOR_ADDRESS = TESTNET.WARRIOR_ADDRESS;\nconst WAR_ADDRESS = TESTNET.WAR_ADDRESS;\nconst MOUNTAIN_ADDRESS = TESTNET.MOUNTAIN_ADDRESS;\n\nconst ERC20_ABI = require('./json/ERC20Detailed.json').abi;\nconst WARRIOR_ABI = require('./json/Warrior.json').abi;\nconst WAR_ABI = require('./json/War.json').abi;\nconst MOUNTAIN_ABI = require('./json/Mountain.json').abi;\n\nlet cfx;\nlet account;\nlet cusdtContract;\nlet tokenContract;\nlet warriorContract;\nlet warContract;\nlet mountainContract;\n\nfunction isWalletAvailable() {\n  if (typeof window.conflux !== 'undefined') {\n    return conflux.isConfluxPortal;\n  }\n  return false;\n}\n\nasync function isConnectedToNetwork() {\n  try {\n    const check = await mountainContract.tokenToCoin('1000000000000000000');\n    return true;\n  } catch (err) {\n  }\n  return false;\n}\n\nasync function connectToWallet() {\n\n  // const networkVersion = conflux.networkVersion;\n  // if (networkVersion !== NETWORK_ID) {\n  //   console.error({ networkVersion });\n  //   throw new Error('Wrong network. Please select TESTNET');\n  // }\n\n  cfx = new Conflux({\n    networkId: NETWORK_ID,\n  });\n  cfx.provider = conflux;\n  const accounts = await conflux.send(\"cfx_requestAccounts\");\n  account = accounts[0];\n  cusdtContract = cfx.Contract({ abi: ERC20_ABI, address: CUSDT_ADDRESS });\n  tokenContract = cfx.Contract({ abi: ERC20_ABI, address: TOKEN_ADDRESS });\n  warriorContract = cfx.Contract({ abi: WARRIOR_ABI, address: WARRIOR_ADDRESS });\n  warContract = cfx.Contract({ abi: WAR_ABI, address: WAR_ADDRESS });\n  mountainContract = cfx.Contract({ abi: MOUNTAIN_ABI, address: MOUNTAIN_ADDRESS });\n\n  const check = await isConnectedToNetwork();\n  if (!check) throw new Error('Not connected to network.');\n  // const tx = await cusdtContract.approve(WARRIOR_ADDRESS, MAX_UINT.toString()).sendTransaction({ from: account }).executed();\n  // const txHash = tx.transactionHash;\n  // console.log(txHash);\n\n  // try {\n  //   let logs = await warriorContract.WarriorSummoned().getLogs();\n  //   console.log(logs);\n  // } catch (err) {\n  //   console.error(err);\n  // }\n}\n\nasync function getWalletData() {\n  let gasBalance = await cfx.getBalance(account);\n  gasBalance = ethers.utils.formatEther(gasBalance.toString());\n  let cusdtBalance = await cusdtContract.balanceOf(account);\n  cusdtBalance = ethers.utils.formatEther(cusdtBalance.toString());\n  let tokenBalance = await tokenContract.balanceOf(account);\n  tokenBalance = ethers.utils.formatEther(tokenBalance.toString());\n\n  return {\n    address: account,\n    usdt: Math.floor(cusdtBalance * 100) / 100,\n    gas: Math.floor(gasBalance * 100) / 100,\n    token: Math.floor(tokenBalance * 100) / 100,\n  };\n}\n\nconst walletDataSubscribers = [];\n\nfunction subscribeWalletData(cb) {\n  walletDataSubscribers.push(cb);\n}\n\nasync function publishWalletData() {\n  const data = await getWalletData();\n  for (let i = 0; i < walletDataSubscribers.length; i++) {\n    const cb = walletDataSubscribers[i];\n    cb(data);\n  }\n}\n\nasync function approveMint(amount) {\n  const approveAmount = ethers.utils.parseUnits(amount + '');\n  const tx = await cusdtContract.approve(WARRIOR_ADDRESS, approveAmount.toString()).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getAllowanceMint() {\n  let allowance = await cusdtContract.allowance(account, WARRIOR_ADDRESS);\n  allowance = ethers.utils.formatEther(allowance.toString());\n  return allowance.toString();\n}\n\nasync function mint(amount) {\n  const amountCoin = ethers.utils.parseUnits(amount + '');\n  const tx = await warriorContract.summon(amountCoin).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  // const receipt = await cfx.getTransactionReceipt(txHash);\n  // console.log(receipt.logs);\n  return txHash;\n}\n\nfunction openExplorerTx(txHash) {\n  Lib.openUrl('https://testnet.confluxscan.io/transaction/' + txHash);\n}\n\nfunction openExplorerNft() {\n  const url = 'https://testnet.confluxscan.io/nft-checker/' + account;\n  Lib.openUrl(url);\n}\n\nasync function getFloorPrice() {\n  let price = await mountainContract.tokenToCoin('1000000000000000000');\n  price = ethers.utils.formatEther(price.toString());\n  return price;\n}\n\nasync function getGrowth() {\n  let stats = await mountainContract.getStat();\n  let startTime = Number(stats[0].toString());\n  let startPrice = BN.from(stats[1].toString());\n  let endPrice = BN.from(stats[2].toString());\n  let diffPrice = endPrice.sub(startPrice);\n  stats = await warContract.getStat();\n  let now = Number(stats[0].toString());\n\n  const age = now - startTime;\n  const oneDay = 3600 * 24;\n  const oneYear = 3600 * 24 * 365;\n  const pctg = diffPrice.mul(10000).div(startPrice);\n  const pctgDaily = diffPrice.mul((10000 * oneDay)).div((startPrice.mul(age)));\n  const pctgYearly = diffPrice.mul((10000 * oneYear)).div((startPrice.mul(age)));\n  // const multiplier = oneYear * 100 * 100000;\n  // const divider = startPrice.mul(dt);\n  // const pctgYearly = profit.mul(multiplier).div(divider);\n\n  const ret = {\n    age,\n    pctg: pctg.toNumber() / 100,\n    pctgDaily: pctgDaily.toNumber() / 100,\n    pctgYearly: pctgYearly.toNumber() / 100\n  }\n  return ret;\n}\n\nasync function tokenToCoin(amount) {\n  if (Number(amount) > 0) {\n    const amountToken = ethers.utils.parseUnits(amount + '');\n    let price = await mountainContract.tokenToCoin(amountToken);\n    price = ethers.utils.formatEther(price.toString());\n    return price;\n  } else {\n    return 0;\n  }\n}\n\nasync function approveSell(amount) {\n  const approveAmount = ethers.utils.parseUnits(amount + '');\n  const tx = await tokenContract.approve(MOUNTAIN_ADDRESS, approveAmount.toString()).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getAllowanceSell() {\n  let allowance = await tokenContract.allowance(account, MOUNTAIN_ADDRESS);\n  allowance = ethers.utils.formatEther(allowance.toString());\n  return allowance.toString();\n}\n\nasync function sell(amount) {\n  const amountToken = ethers.utils.parseUnits(amount + '');\n  const tx = await mountainContract.buyBack(amountToken).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getOwnedNFT() {\n  let num = await warriorContract.balanceOf(account);\n  num = Number(num.toString());\n  const rows = [];\n  for (let i = 0; i < num; i++) {\n    let nftId = await warriorContract.tokenOfOwnerByIndex(account, i);\n    nftId = Number(nftId.toString());\n    const detail = await getDetailNFT(nftId);\n    rows.push(detail);\n    // const tokenURI = await warriorContract.tokenURI(nftId);\n    // const response = await axios.get(tokenURI);\n    // const image = response.data.image;\n    // const name = response.data.name;\n    // let stat = await warContract.getNftStat(nftId);\n    // const power = Number(stat[2].toString());\n    // stat = await warriorContract.getStat(nftId);\n    // let collateral = Number(ethers.utils.formatEther(stat[1].toString()));\n    // const ts = Number(stat[4].toString());\n    // const rarity = Number(stat[5].toString());\n    // let earning = await warContract.getTotalReward(nftId, 0);\n    // earning = earning[0];\n    // earning = Number(ethers.utils.formatEther(earning.toString()));\n    // rows.push({ nftId: nftId, power: power, earning: earning, noPenaltyTime: ts, rarity, collateral, image, name });\n  }\n\n  return rows;\n}\n\nfunction toEth(bn) {\n  return Math.floor(Number(ethers.utils.formatEther(bn.toString())) * 100) / 100;\n}\n\nasync function getDetailNFT(nftId) {\n  const tokenURI = await warriorContract.tokenURI(nftId);\n  const response = await axios.get(tokenURI);\n  const image = response.data.image;\n  const name = response.data.name;\n\n  const warStat = await warContract.getNftStat(nftId);\n  // nftId2connect[nftId],\n  // nftId2turn[nftId],\n  // nftId2power[nftId],\n  // nftId2earning[nftId]\n\n  const power = Number(warStat[2].toString());\n  const claimedEarning = BN.from(warStat[3].toString());\n\n  const warriorStat = await warriorContract.getStat(nftId);\n  // (id, coll, genetic, createdTime, noFeeUnsummonTime, rarity);\n\n  const collateral = BN.from(warriorStat[1].toString());\n  const createdTime = Number(warriorStat[3].toString());\n  const noFeeUnsummonTime = Number(warriorStat[4].toString());\n  const rarity = Number(warriorStat[5].toString());\n\n  let totalReward = await warContract.getTotalReward(nftId, 0);\n  totalReward = BN.from(totalReward[0].toString());\n\n  const age = moment().unix() - createdTime;\n  const totalEarning = totalReward.add(claimedEarning);\n  let totalEarningUsd = await mountainContract.tokenToCoin(totalEarning.toString());\n  totalEarningUsd = BN.from(totalEarningUsd.toString());\n  const pctg = totalEarningUsd.mul(10000).div(collateral);\n  const pctgDaily = pctg.mul((3600 * 24)).div(age);\n  const pctgYearly = pctg.mul((3600 * 24 * 365)).div(age);\n  const ageDays = Math.floor((age / (3600 * 24)) * 100) / 100;\n  const ret = {\n    nftId: nftId,\n    power: power,\n    earning: toEth(totalReward),\n    noPenaltyTime:\n      noFeeUnsummonTime,\n    rarity,\n    collateral: toEth(collateral),\n    image,\n    name,\n    age: ageDays,\n    totalEarning: toEth(totalEarning),\n    totalEarningUsd: toEth(totalEarningUsd),\n    pctg: pctg.toNumber() / 100,\n    pctgDaily: pctgDaily.toNumber() / 100,\n    pctgYearly: pctgYearly.toNumber() / 100\n  };\n\n  return ret;\n}\n\n\nasync function getNextSessionTime() {\n  let stat = await warContract.getStat();\n  let ts = Number(stat[4].toString());\n  return ts;\n}\n\nasync function retrieveReward(nftId) {\n  const tx = await warContract.withdrawReward(nftId, 0).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function burn(nftId) {\n  const tx = await warriorContract.unsummon(nftId).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\n\nexport {\n  isWalletAvailable,\n  isConnectedToNetwork,\n  connectToWallet,\n  getWalletData,\n  subscribeWalletData,\n  publishWalletData,\n  getAllowanceMint,\n  approveMint,\n  mint,\n  openExplorerTx,\n  openExplorerNft,\n  tokenToCoin,\n  getFloorPrice,\n  getAllowanceSell,\n  approveSell,\n  sell,\n  getOwnedNFT,\n  getNextSessionTime,\n  retrieveReward,\n  burn,\n  getGrowth,\n  getDetailNFT\n};\n\n\n"],"sourceRoot":""}