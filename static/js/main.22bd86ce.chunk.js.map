{"version":3,"sources":["BlockLib.js","game/PanelHeader.js","game/PanelWarriors.js","game/PanelAbout.js","game/PanelMenu.js","game/PanelSell.js","game/PanelMint.js","game/PanelManage.js","game/Home.js","App.js","serviceWorker.js","index.js","Data.js","Lib.js"],"names":["cfx","account","cusdtContract","tokenContract","warriorContract","warContract","mountainContract","require","Conflux","ethers","sign","format","Drip","Lib","CUSDT_ADDRESS","BigNumber","constants","MaxUint256","TESTNET","TOKEN_ADDRESS","WARRIOR_ADDRESS","WAR_ADDRESS","MOUNTAIN_ADDRESS","ERC20_ABI","abi","WARRIOR_ABI","WAR_ABI","MOUNTAIN_ABI","isConnectedToNetwork","a","tokenToCoin","networkId","provider","conflux","send","accounts","Contract","address","Error","getWalletData","getBalance","gasBalance","utils","formatEther","toString","balanceOf","cusdtBalance","tokenBalance","usdt","Math","floor","gas","token","walletDataSubscribers","data","i","length","cb","amount","approveAmount","parseUnits","approve","sendTransaction","from","executed","tx","txHash","transactionHash","allowance","mint","amountCoin","summon","price","Number","amountToken","buyBack","num","rows","tokenOfOwnerByIndex","nftId","getNftStat","stat","power","getStat","collateral","ts","rarity","getTotalReward","earning","push","noPenaltyTime","console","log","withdrawReward","unsummon","module","exports","isWalletAvailable","window","isConfluxPortal","connectToWallet","subscribeWalletData","publishWalletData","getAllowanceMint","approveMint","openExplorerTx","openUrl","openExplorerNft","url","getFloorPrice","getAllowanceSell","approveSell","USDT","IMG_DATA","TOKEN","GAS","TOKEN_NAME","isConnectedToWallet","showToast","getStorageValue","setStorageValue","PanelHeader","props","state","show","this","busy","interval","setInterval","refresh","available","haveConnectedBefore","connectWallet","error","message","toUpperCase","setState","clearInterval","right","View","style","alignItems","ActivityIndicator","Text","color","title","onPress","padding","backgroundColor","flexDirection","justifyContent","textAlign","fontWeight","React","Component","IMG_WIDE","PanelWarriors","s","fontSize","key","index","flex","ImageBackground","source","uri","resizeMode","name","chance","imgData","rows1d","id","mintFee","img","rows2d","cells","map","cols","cell","renderCell","PanelAbout","msg","PanelMenu","handleShow","ss","paddingVertical","size","sell","PanelReward","modalVisible","floorPrice","sellAmount","coinReceived","allowSell","refreshAllowance","value","indicator","type","isVisible","onBackdropPress","approveDisabled","sellDisabled","renderModal","placeholder","onChangeText","setSellAmount","keyboardType","disabled","handleApprove","width","handleSell","handleHome","mintingFee","startIndex","allowMint","item","marginHorizontal","rounded","pctg","mintEnabled","mintDisabled","arr1","ii","arr2","checked","selectMintingFee","iconType","checkedIcon","uncheckedIcon","renderChance","handleMint","burn","getOwnedNFT","getNextSessionTime","retrieveReward","remainingText","PanelManage","currentIndex","nfts","nextSessionTime","ticker","newTicker","dataList","renderBusy","totalIndex","content","enablePrev","enableNext","enableExplore","enableEarn","enableBurn","earningMsg","burningMsg","btnBurnText","remainingSecsEarning","remainingSecsPenalty","now","moment","unix","txt","Image","height","handleRetrieveReward","handleBurn","theme","colors","primary","Home","json","renderError","Dimensions","get","ScrollView","PanelMint","PanelSell","TouchableOpacity","App","landscape","w","ww","wh","screen","h","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","j","star","Toastify","gravity","position","text","ms","Promise","resolve","reject","setTimeout","val","localStorage","getItem","setItem","delay","open","focus","seconds","secs","numDays","numHours","numMinute","ret"],"mappings":"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","file":"static/js/main.22bd86ce.chunk.js","sourcesContent":["const { Conflux, sign, format, Drip } = require('js-conflux-sdk');\nconst { ethers } = require(\"ethers\");\nconst moment = require('moment');\nconst Lib = require('./Lib');\nconst BN = ethers.BigNumber;\n\nconst MAX_UINT = ethers.constants.MaxUint256;\nconst NETWORK_ID = 1;\nconst FUSDT_ADDRESS = 'cfxtest:acg57abw3cn6113xea1atrth5e496hfe5ugyxjzd30';\nconst CUSDT_ADDRESS = 'cfxtest:acgcdeewrb2gtaxynwbezyfudypzay92cegvx0gj5c';\nconst CFLUX_ADDRESS = 'cfxtest:acg8b8v1waxdkt8u0gce8ux17peepydshun3t5szue';\nconst FLUXMINT_ADDRESS = 'cfxtest:acfbmt9z8aa8bpsdz5pj0dvtnadenz6ynu627y79nw';\n\nconst TESTNET = require('./json/testnet.json');\nconst TOKEN_ADDRESS = TESTNET.TOKEN_ADDRESS;\nconst WARRIOR_ADDRESS = TESTNET.WARRIOR_ADDRESS;\nconst WAR_ADDRESS = TESTNET.WAR_ADDRESS;\nconst MOUNTAIN_ADDRESS = TESTNET.MOUNTAIN_ADDRESS;\n\nconst ERC20_ABI = require('./json/ERC20Detailed.json').abi;\nconst WARRIOR_ABI = require('./json/Warrior.json').abi;\nconst WAR_ABI = require('./json/War.json').abi;\nconst MOUNTAIN_ABI = require('./json/Mountain.json').abi;\n\nlet cfx;\nlet account;\nlet cusdtContract;\nlet tokenContract;\nlet warriorContract;\nlet warContract;\nlet mountainContract;\n\nfunction isWalletAvailable() {\n  if (typeof window.conflux !== 'undefined') {\n    return conflux.isConfluxPortal;\n  }\n  return false;\n}\n\nasync function isConnectedToNetwork() {\n  try {\n    const check = await mountainContract.tokenToCoin('1000000000000000000');\n    return true;\n  } catch (err) {\n  }\n  return false;\n}\n\nasync function connectToWallet() {\n\n  // const networkVersion = conflux.networkVersion;\n  // if (networkVersion !== NETWORK_ID) {\n  //   console.error({ networkVersion });\n  //   throw new Error('Wrong network. Please select TESTNET');\n  // }\n\n  cfx = new Conflux({\n    networkId: NETWORK_ID,\n  });\n  cfx.provider = conflux;\n  const accounts = await conflux.send(\"cfx_requestAccounts\");\n  account = accounts[0];\n  cusdtContract = cfx.Contract({ abi: ERC20_ABI, address: CUSDT_ADDRESS });\n  tokenContract = cfx.Contract({ abi: ERC20_ABI, address: TOKEN_ADDRESS });\n  warriorContract = cfx.Contract({ abi: WARRIOR_ABI, address: WARRIOR_ADDRESS });\n  warContract = cfx.Contract({ abi: WAR_ABI, address: WAR_ADDRESS });\n  mountainContract = cfx.Contract({ abi: MOUNTAIN_ABI, address: MOUNTAIN_ADDRESS });\n\n  const check = await isConnectedToNetwork();\n  if (!check) throw new Error('Not connected to network.');\n  // const tx = await cusdtContract.approve(WARRIOR_ADDRESS, MAX_UINT.toString()).sendTransaction({ from: account }).executed();\n  // const txHash = tx.transactionHash;\n  // console.log(txHash);\n\n  // try {\n  //   let logs = await warriorContract.WarriorSummoned().getLogs();\n  //   console.log(logs);\n  // } catch (err) {\n  //   console.error(err);\n  // }\n}\n\nasync function getWalletData() {\n  let gasBalance = await cfx.getBalance(account);\n  gasBalance = ethers.utils.formatEther(gasBalance.toString());\n  let cusdtBalance = await cusdtContract.balanceOf(account);\n  cusdtBalance = ethers.utils.formatEther(cusdtBalance.toString());\n  let tokenBalance = await tokenContract.balanceOf(account);\n  tokenBalance = ethers.utils.formatEther(tokenBalance.toString());\n  return {\n    address: account,\n    usdt: Math.floor(cusdtBalance * 100) / 100,\n    gas: Math.floor(gasBalance * 100) / 100,\n    token: Math.floor(tokenBalance * 100) / 100,\n  };\n}\n\nconst walletDataSubscribers = [];\n\nfunction subscribeWalletData(cb) {\n  walletDataSubscribers.push(cb);\n}\n\nasync function publishWalletData() {\n  const data = await getWalletData();\n  for (let i = 0; i < walletDataSubscribers.length; i++) {\n    const cb = walletDataSubscribers[i];\n    cb(data);\n  }\n}\n\nasync function approveMint(amount) {\n  const approveAmount = ethers.utils.parseUnits(amount + '');\n  const tx = await cusdtContract.approve(WARRIOR_ADDRESS, approveAmount.toString()).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getAllowanceMint() {\n  let allowance = await cusdtContract.allowance(account, WARRIOR_ADDRESS);\n  allowance = ethers.utils.formatEther(allowance.toString());\n  return allowance.toString();\n}\n\nasync function mint(amount) {\n  const amountCoin = ethers.utils.parseUnits(amount + '');\n  const tx = await warriorContract.summon(amountCoin).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  // const receipt = await cfx.getTransactionReceipt(txHash);\n  // console.log(receipt.logs);\n  return txHash;\n}\n\nfunction openExplorerTx(txHash) {\n  Lib.openUrl('https://testnet.confluxscan.io/transaction/' + txHash);\n}\n\nfunction openExplorerNft() {\n  const url = 'https://testnet.confluxscan.io/nft-checker/' + account;\n  Lib.openUrl(url);\n}\n\nasync function getFloorPrice() {\n  let price = await mountainContract.tokenToCoin('1000000000000000000');\n  price = ethers.utils.formatEther(price.toString());\n  return price;\n}\n\nasync function tokenToCoin(amount) {\n  if (Number(amount) > 0) {\n    const amountToken = ethers.utils.parseUnits(amount + '');\n    let price = await mountainContract.tokenToCoin(amountToken);\n    price = ethers.utils.formatEther(price.toString());\n    return price;\n  } else {\n    return 0;\n  }\n}\n\nasync function approveSell(amount) {\n  const approveAmount = ethers.utils.parseUnits(amount + '');\n  const tx = await tokenContract.approve(MOUNTAIN_ADDRESS, approveAmount.toString()).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getAllowanceSell() {\n  let allowance = await tokenContract.allowance(account, MOUNTAIN_ADDRESS);\n  allowance = ethers.utils.formatEther(allowance.toString());\n  return allowance.toString();\n}\n\nasync function sell(amount) {\n  const amountToken = ethers.utils.parseUnits(amount + '');\n  const tx = await mountainContract.buyBack(amountToken).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getOwnedNFT() {\n  let num = await warriorContract.balanceOf(account);\n  num = Number(num.toString());\n  const rows = [];\n  for (let i = 0; i < num; i++) {\n    let nftId = await warriorContract.tokenOfOwnerByIndex(account, i);\n    nftId = Number(nftId.toString());\n    let stat = await warContract.getNftStat(nftId);\n    const power = Number(stat[2].toString());\n    stat = await warriorContract.getStat(nftId);\n    let collateral = Number(ethers.utils.formatEther(stat[1].toString()));\n    const ts = Number(stat[4].toString());\n    const rarity = Number(stat[5].toString());\n    let earning = await warContract.getTotalReward(nftId);\n    earning = Number(ethers.utils.formatEther(earning.toString()));\n    rows.push({ nftId: nftId, power: power, earning: earning, noPenaltyTime: ts, rarity, collateral });\n  }\n\n  console.log(rows);\n\n  return rows;\n}\n\nasync function getNextSessionTime() {\n  let stat = await warContract.getStat();\n  let ts = Number(stat[4].toString());\n  return ts;\n}\n\nasync function retrieveReward(nftId) {\n  const tx = await warContract.withdrawReward(nftId).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function burn(nftId) {\n  const tx = await warriorContract.unsummon(nftId).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\n\nmodule.exports = {\n  isWalletAvailable,\n  isConnectedToNetwork,\n  connectToWallet,\n  getWalletData,\n  subscribeWalletData,\n  publishWalletData,\n  getAllowanceMint,\n  approveMint,\n  mint,\n  openExplorerTx,\n  openExplorerNft,\n  tokenToCoin,\n  getFloorPrice,\n  getAllowanceSell,\n  approveSell,\n  mint,\n  sell,\n  getOwnedNFT,\n  getNextSessionTime,\n  retrieveReward,\n  burn\n};\n\n\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button } from 'react-native-elements';\n\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME, GAS } = require('../Data');\nconst { isWalletAvailable, isConnectedToWallet, connectToWallet, getWalletData, subscribeWalletData, publishWalletData } = require('../BlockLib');\nconst { showToast, getStorageValue, setStorageValue } = require('../Lib');\n\nclass PanelHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.busy = false;\n    this.interval = setInterval(() => this.refresh(), 3000);\n    try {\n      const available = await isWalletAvailable();\n      const haveConnectedBefore = await getStorageValue('HAVE_CONNECTED_BEFORE');\n      if (available && haveConnectedBefore) {\n        return await this.connectWallet();\n      }\n    } catch (err) {\n      // todo: popup error\n      console.error(err);\n      if (err.message) showToast(err.message.toUpperCase());\n    }\n\n    await setStorageValue('HAVE_CONNECTED_BEFORE', false);\n    this.setState({\n      show: 'disconnected'\n    });\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async refresh() {\n    if (this.state.show !== 'connected') return;\n    if (this.busy) return;\n    this.busy = true;\n\n    // todo here ??\n\n    this.busy = false;\n  }\n\n  async connectWallet() {\n    this.setState({ show: 'busy' });\n    try {\n      await connectToWallet();\n      await setStorageValue('HAVE_CONNECTED_BEFORE', true);\n      subscribeWalletData((data) => {\n        this.setState({\n          show: 'connected',\n          usdt: data.usdt,\n          token: data.token,\n          gas: data.gas\n        });\n      })\n      return await publishWalletData();\n    } catch (err) {\n      // todo: popup error\n      console.error(err);\n      if (err.message) showToast(err.message.toUpperCase());\n    }\n\n    await setStorageValue('HAVE_CONNECTED_BEFORE', false);\n    this.setState({\n      show: 'disconnected'\n    });\n  }\n\n  render() {\n    let right;\n\n    if (this.state.show === 'busy') {\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <ActivityIndicator />\n        </View>\n      );\n    } else if (this.state.show === 'connected') {\n      const token = this.state.token;\n      const usdt = this.state.usdt;\n      const gas = this.state.gas;\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <Text style={{ color: 'white' }}>CONNECTED</Text>\n          <Text style={{ color: 'white' }}>{token} {TOKEN} | {usdt} {USDT} | {gas} {GAS}</Text>\n        </View>\n      );\n    } else {\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <Button title=\"CONNECT\" onPress={() => this.connectWallet()} />\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ padding: 20, backgroundColor: 'gray' }}>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n          <View>\n            <Text style={{ textAlign: 'left', color: 'white', fontWeight: 'bold' }}>RTK WARRIORS</Text>\n          </View>\n          {right}\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelHeader;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator, ImageBackground } from 'react-native';\nimport { CheckBox, Button, Avatar } from 'react-native-elements';\n\nconst { IMG_DATA, IMG_WIDE, USDT } = require('../Data');\n\nclass PanelWarriors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  renderCell(data) {\n    const s = { textAlign: 'center', fontSize: 10, color: 'white', fontWeight: 'bold' };\n\n    return (\n      <View key={data.index} style={{ flex: 1, padding: 10 }}>\n        <ImageBackground source={{\n          uri: data.url,\n        }} resizeMode=\"cover\" style={{ padding: 10 }}>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text style={s}>{data.name.toUpperCase()}</Text>\n          <Text style={s}>POWER: {data.power}</Text>\n          <Text style={s}>{data.mint} {USDT}</Text>\n          <Text style={s}>{data.chance}%</Text>\n        </ImageBackground>\n      </View>\n    );\n  }\n\n  render() {\n    const imgData = IMG_DATA;\n    const rows1d = [];\n\n    for (let i = 0; i < imgData.length; i++) {\n      const id = imgData[i];\n      const name = id.name;\n      const mint = id.mintFee;\n      const power = id.power;\n      const chance = id.chance;\n\n      let url = id.img;\n\n      if (i === 0) {\n        url = IMG_WIDE;\n      }\n\n      rows1d.push({ index: i, name, power, mint, chance, url });\n\n    }\n\n    let rows2d = [];\n    let cells = [];\n    for (let i = 0; i < rows1d.length; i++) {\n      cells.push(rows1d[i]);\n      if (i == 0) {\n        rows2d.push(cells);\n        cells = [];\n      } else {\n        if (cells.length === 3) {\n          rows2d.push(cells);\n          cells = [];\n        }\n      }\n    }\n\n    if (cells.length > 0) {\n      rows2d.push(cells);\n    }\n\n    const rows = rows2d;\n\n    return (\n      <View style={{ backgroundColor: 'gainsboro' }}>\n        {rows.map((cols, index) =>\n          <View key={index} style={{ flexDirection: 'row' }}>\n            {cols.map((cell) => this.renderCell(cell))}\n          </View>\n        )}\n      </View>\n    );\n  }\n\n}\n\nexport default PanelWarriors;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button } from 'react-native-elements';\n\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\n\nclass PanelAbout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    const msg = 'RTK Warriors are NFT collections that generate ' + TOKEN_NAME + ' (' + TOKEN + ') based on its rarity. RTK Warriors also return 100% minting cost when burned.';\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        <Text style={{ textAlign: 'center', fontWeight: 'bold' }}>ABOUT</Text>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>{msg.toUpperCase()}</Text>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelAbout;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button, Icon } from 'react-native-elements';\n\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { isConnectedToNetwork } = require('../BlockLib');\nconst { showToast, getStorageValue, setStorageValue } = require('../Lib');\n\nclass PanelMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  async handleShow(show) {\n    const isConnected = await isConnectedToNetwork();\n    if (!isConnected) {\n      return showToast('NOT CONNECTED TO NETWORK');\n    }\n    this.props.handleShow(show)\n  }\n\n  render() {\n    const ss = { flex: 1, justifyContent: 'center', paddingVertical: 10 };\n    return (\n      <View style={{ padding: 5, backgroundColor: '#eee' }}>\n        <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='collections' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>OWNED WARRIORS</Text></View>\n            <Button title=\"MANAGE\" onPress={() => this.handleShow('MANAGE')} />\n          </View>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='account-circle' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>NEW WARRIOR</Text></View>\n            <Button title=\"MINT\" onPress={() => this.handleShow('MINT')} />\n          </View>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='account-balance-wallet' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>{TOKEN_NAME.toUpperCase()}</Text></View>\n            <Button title=\"SWAP\" onPress={() => this.handleShow('SELL')} />\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelMenu;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport { Button, Input } from 'react-native-elements';\nimport Modal from 'modal-enhanced-react-native-web';\n\nconst { USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { tokenToCoin, getFloorPrice, sell, getAllowanceSell, approveSell, openExplorerTx, publishWalletData } = require('../BlockLib');\n\nclass PanelReward extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      modalVisible: false,\n      floorPrice: 0,\n      sellAmount: null,\n      coinReceived: 0,\n      allowSell: 0\n    };\n  }\n\n  async componentDidMount() {\n    const floorPrice = await getFloorPrice();\n    this.setState({ floorPrice, show: 'form' });\n    this.refreshAllowance();\n\n    this.interval = setInterval(async () => {\n      const floorPrice = await getFloorPrice();\n      this.setState({ floorPrice });\n    }, 5000);\n\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async setSellAmount(value) {\n    const amount = value;\n    this.setState({ sellAmount: amount });\n    const coinReceived = await tokenToCoin(amount);\n    this.setState({ coinReceived });\n  }\n\n  async refreshAllowance() {\n    const allowSell = await getAllowanceSell();\n    this.setState({ allowSell });\n  }\n\n  async handleApprove() {\n    try {\n      const sellAmount = this.state.sellAmount;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await approveSell(sellAmount);\n      this.refreshAllowance();\n      this.setState({ txHash });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleSell() {\n    const sellAmount = this.state.sellAmount;\n    this.setState({ modalVisible: true, txHash: false });\n    const txHash = await sell(sellAmount);\n    this.refreshAllowance();\n    await publishWalletData();\n    this.setState({ txHash });\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            <View>\n              {indicator}\n              <Text> </Text>\n              <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            </View>\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    let approveDisabled = false;\n    if (Number(this.state.allowSell) >= Number(this.state.sellAmount)) {\n      approveDisabled = true;\n    }\n\n    let sellDisabled = !approveDisabled;\n\n    if (this.state.sellAmount > 0) {\n    } else {\n      sellDisabled = true;\n    }\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>{TOKEN_NAME.toUpperCase()} FLOOR PRICE</Text>\n        <Text style={{ textAlign: 'center' }}>1 {TOKEN} = {this.state.floorPrice} {USDT}</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        <Input\n          placeholder={'ENTER ' + TOKEN + ' AMOUNT'}\n          onChangeText={value => this.setSellAmount(value)}\n          value={this.state.sellAmount}\n          keyboardType='numeric'\n        />\n        <Text style={{ textAlign: 'center' }}>SWAP FOR {this.state.coinReceived} {USDT}</Text>\n        <Text style={{ textAlign: 'center' }}></Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={approveDisabled} title=\"APPROVE\" onPress={() => this.handleApprove()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={sellDisabled} title=\"SWAP\" onPress={() => this.handleSell()} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelReward;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button, Input, Avatar } from 'react-native-elements';\n\nimport Modal from 'modal-enhanced-react-native-web';\n\nconst { IMG_DATA, USDT } = require('../Data');\nconst { mint, getAllowanceMint, approveMint, openExplorerTx, publishWalletData } = require('../BlockLib');\nconst { showToast, getStorageValue, setStorageValue } = require('../Lib');\n\nclass PanelReward extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      txHash: false,\n      mintingFee: 10000,\n      startIndex: 0,\n      allowMint: 0\n    };\n  }\n\n  async componentDidMount() {\n    const allowMint = await getAllowanceMint();\n    this.setState({ show: 'form', allowMint });\n  }\n\n  componentWillMount() {\n  }\n\n  async selectMintingFee(mintingFee, index) {\n    this.setState({ mintingFee, startIndex: (index * 5) })\n  }\n\n  async approve() {\n    try {\n      const mintingFee = this.state.mintingFee;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await approveMint(mintingFee);\n      const allowMint = await getAllowanceMint();\n      this.setState({ txHash, allowMint });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleMint() {\n    try {\n      const mintingFee = this.state.mintingFee;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await mint(mintingFee);\n      await publishWalletData();\n      const allowMint = await getAllowanceMint();\n      this.setState({ txHash, allowMint });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderChance(item) {\n    const imgData = IMG_DATA;\n    const url = imgData[(item.index + this.state.startIndex)].img;\n\n    const styleAvatar = { flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginHorizontal: 5 };\n    return (\n      <View style={styleAvatar}>\n        <Avatar\n          rounded\n          size={'large'}\n          source={{\n            uri: url\n          }}\n        />\n        <Text>{item.pctg}%</Text>\n      </View>);\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            {indicator}\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    const mintEnabled = (Number(this.state.allowMint) >= this.state.mintingFee);\n    let approveDisabled = mintEnabled;\n    let mintDisabled = !mintEnabled;\n\n    const ii = 0;\n    const arr1 = [{ pctg: 1, index: ii + 0 }, { pctg: 7, index: ii + 1 }];\n    const arr2 = [{ pctg: 13, index: ii + 2 }, { pctg: 19, index: ii + 3 }, { pctg: 60, index: ii + 4 }];\n    const arr3 = [10000, 1000, 100, 10, 1];\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>SELECT MINTING FEE</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        {arr3.map((item, index) => {\n          return (\n            <CheckBox title={item + ' ' + USDT}\n              checked={(this.state.mintingFee === item)}\n              onPress={() => this.selectMintingFee(item, index)}\n              iconType='material'\n              checkedIcon='check-box'\n              uncheckedIcon='check-box-outline-blank'\n            />\n          );\n        })}\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>CHANCE</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          {arr1.map((item) => this.renderChance(item))}\n        </View>\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          {arr2.map((item) => this.renderChance(item))}\n        </View>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>BURN LATER TO RETRIEVE 100% MINTING FEE BACK</Text>\n        <Text style={{ textAlign: 'center' }}>(5% PINALTY WHEN BURN BEFORE 30 DAYS)</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={approveDisabled} title=\"APPROVE\" onPress={() => this.approve()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={mintDisabled} title=\"MINT\" onPress={() => this.handleMint()} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelReward;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator, ImageBackground } from 'react-native';\nimport { CheckBox, Button, Input, Avatar } from 'react-native-elements';\nimport moment from 'moment';\nimport Modal from 'modal-enhanced-react-native-web';\n\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { burn, getOwnedNFT, getNextSessionTime, openExplorerNft, retrieveReward, publishWalletData, openExplorerTx } = require('../BlockLib');\nconst { remainingText, showToast } = require('../Lib');\n\nclass PanelManage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      currentIndex: 0,\n      nfts: [],\n      nextSessionTime: 0,\n      ticker: 0\n    };\n  }\n\n  async componentDidMount() {\n    const nfts = await getOwnedNFT();\n    const nextSessionTime = await getNextSessionTime();\n    this.setState({ show: 'list', nfts, nextSessionTime });\n    this.interval = setInterval(() => {\n      const newTicker = this.state.ticker + 1;\n      this.setState({ ticker: newTicker });\n    }, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async refresh() {\n\n  }\n\n  async handleRetrieveReward() {\n    const dataList = this.state.nfts;\n    const currentIndex = this.state.currentIndex;\n    const nftId = dataList[currentIndex].nftId;\n\n    try {\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await retrieveReward(nftId);\n      await publishWalletData();\n      const nfts = await getOwnedNFT();\n      this.setState({ txHash, nfts });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleBurn() {\n    const dataList = this.state.nfts;\n    const currentIndex = this.state.currentIndex;\n    const nftId = dataList[currentIndex].nftId;\n    const earning = Number(dataList[currentIndex].earning);\n\n    if (earning > 0) return showToast('retrieve earning first'.toUpperCase());\n\n    try {\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await burn(nftId);\n      await publishWalletData();\n      const nfts = await getOwnedNFT();\n      this.setState({ txHash, nfts, currentIndex: 0 });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>QUERYING OWNED NFTS</Text>\n        <Text> </Text>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            <View>\n              {indicator}\n              <Text> </Text>\n              <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            </View>\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    if (this.state.show === 'busy') return this.renderBusy();\n    const dataList = this.state.nfts;\n\n    const totalIndex = dataList.length;\n    const currentIndex = this.state.currentIndex;\n    const nextSessionTime = this.state.nextSessionTime;\n\n    let content = (\n      <View>\n        <Text style={{ textAlign: 'center' }}>NOT OWNED ANY WARRIORS</Text>\n        <Text> </Text>\n      </View>\n    );\n    let title = 'WARRIORS OWNED (0/0)';\n\n    let enablePrev = false;\n    let enableNext = false;\n    let enableExplore = false;\n    let enableEarn = false;\n    let enableBurn = false;\n\n    let earningMsg = <Text> </Text>;\n    let burningMsg = <Text> </Text>;\n    let btnBurnText = 'BURN';\n\n    if (dataList.length > 0) {\n      const data = dataList[currentIndex];\n      const nftId = data.nftId;\n      const power = data.power;\n      const earning = Number(data.earning);\n      const noPenaltyTime = Number(data.noPenaltyTime);\n      const collateral = data.collateral;\n\n      let name;\n      let url;\n\n      const imgData = IMG_DATA;\n      for (let i = 0; i < imgData.length; i++) {\n        const id = imgData[i];\n        if (id.power === power) {\n          name = id.name;\n          url = id.img;\n        }\n      }\n\n      enablePrev = (currentIndex > 0);\n      enableNext = (currentIndex < totalIndex - 1);\n      enableExplore = true;\n      enableEarn = (earning > 0);\n      enableBurn = true;\n\n      let remainingSecsEarning = 0;\n      let remainingSecsPenalty = 0;\n\n      const now = moment().unix();\n      if (now < noPenaltyTime) {\n        remainingSecsPenalty = noPenaltyTime - now;\n      }\n      if (now < nextSessionTime) {\n        remainingSecsEarning = nextSessionTime - now;\n      }\n\n      earningMsg = (\n        <View>\n          <Text> </Text>\n          <Text style={{ textAlign: 'center' }}>EARNING WILL BE AVAILABLE AFTER</Text>\n          <Text style={{ textAlign: 'center' }}>{moment.unix(nextSessionTime).format()}</Text>\n          <Text> </Text>\n        </View>\n      );\n\n      if (earning > 0) {\n        earningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>EARNING AVAILABLE</Text>\n            <Text style={{ textAlign: 'center' }}>{earning} {TOKEN}</Text>\n            <Text> </Text>\n          </View>\n        );\n      } else if (remainingSecsEarning > 0) {\n        const txt = remainingText(remainingSecsEarning);\n        earningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>EARNING WILL BE AVAILABLE AFTER</Text>\n            <Text style={{ textAlign: 'center' }}>{txt.toUpperCase()}</Text>\n            <Text> </Text>\n          </View>\n        );\n      }\n\n      if (remainingSecsPenalty > 0) {\n        const txt = remainingText(remainingSecsPenalty);\n        burningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>5% BURN PENALTY APPLIED FOR NEXT</Text>\n            <Text style={{ textAlign: 'center' }}>{txt.toUpperCase()}</Text>\n            <Text> </Text>\n          </View>);\n      }\n\n      btnBurnText = 'BURN TO RECEIVE ' + collateral + ' ' + USDT;\n\n      title = 'WARRIORS OWNED (' + (currentIndex + 1) + '/' + totalIndex + ')';\n\n      content = (\n        <View style={{}}>\n          <Image source={{\n            uri: url,\n          }} resizeMode=\"contain\" style={{ padding: 10, height: 200 }} />\n          <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          </View>\n          <Text style={{ textAlign: 'center' }}> </Text>\n          <Text style={{ textAlign: 'center' }}>{name.toUpperCase()} (#{nftId})</Text>\n          <Text style={{ textAlign: 'center' }}>POWER: {power}</Text>\n          {earningMsg}\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>{title}</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        {content}\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={!enablePrev} title=\"PREV\" onPress={() => this.setState({ currentIndex: currentIndex - 1 })} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 2 }}><Button disabled={!enableExplore} title=\"EXPLORE\" onPress={() => openExplorerNft()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={!enableNext} title=\"NEXT\" onPress={() => this.setState({ currentIndex: currentIndex + 1 })} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{}}><Button disabled={!enableEarn} title=\"RETRIEVE EARNING\" onPress={() => this.handleRetrieveReward()} /></View>\n        {burningMsg}\n        <View style={{}}><Button disabled={!enableBurn} type=\"outline\" title={btnBurnText} onPress={() => this.handleBurn()} /></View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelManage;\n","import React from 'react';\nimport { View, Dimensions, Text, ScrollView, ActivityIndicator } from 'react-native';\nimport { ThemeProvider, Button } from 'react-native-elements';\n\nimport PanelHeader from './PanelHeader';\nimport PanelWarriors from './PanelWarriors';\nimport PanelAbout from './PanelAbout';\nimport PanelMenu from './PanelMenu';\nimport PanelSell from './PanelSell';\nimport PanelMint from './PanelMint';\nimport PanelManage from './PanelManage';\n\nimport Modal from 'modal-enhanced-react-native-web';\nimport { TouchableOpacity } from 'react-native-web';\n\nconst Lib = require('../Lib');\n\nconst theme = {\n  colors: {\n    primary: 'dimgray'\n  }\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      modalVisible: false,\n      txHash: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'home' });\n  }\n\n  componentWillMount() {\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  handleShow(show) {\n    if (show === 'MANAGE') this.setState({ show: 'manage' });\n    else if (show === 'MINT') this.setState({ show: 'mint' });\n    else if (show === 'SELL') this.setState({ show: 'sell' });\n  }\n\n  render() {\n    const obj = this.state.json;\n    if (this.state.show === 'busy') return this.renderBusy();\n    if (this.state.show === 'error') return this.renderError();\n    const wh = Dimensions.get('window').height;\n\n    let content = (\n      <View style={{ flex: 1, backgroundColor: 'gainsboro' }}>\n        <ScrollView>\n          <PanelAbout />\n          <PanelMenu handleShow={show => this.handleShow(show)} />\n          <PanelWarriors />\n        </ScrollView>\n      </View>\n    );\n\n    if (this.state.show === 'mint') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelMint\n              handleHome={() => this.setState({ show: 'home' })}\n            />\n          </ScrollView>\n        </View>\n      );\n    } else if (this.state.show === 'sell') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelSell handleHome={() => this.setState({ show: 'home' })} />\n          </ScrollView>\n        </View>\n      );\n    } else if (this.state.show === 'manage') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelManage handleHome={() => this.setState({ show: 'home' })} />\n          </ScrollView>\n        </View>\n      );\n    }\n\n    const forumUrl = 'https://forum.conflux.fun/t/rtk-warriors-the-first-conflux-project-built-on-top-flux/11202';\n\n    return (\n      <ThemeProvider theme={theme}>\n        <View style={{ flex: 1 }}>\n          <Modal\n            isVisible={this.state.modalVisible}\n            onBackdropPress={() => this.setState({ modalVisible: false })}\n          >\n          </Modal>\n          <View style={{ padding: 5, backgroundColor: 'red' }}>\n            <Text style={{ fontWeight: 'bold', color: 'white', textAlign: 'center', fontSize: 10 }}>TESTNET NETWORK</Text>\n          </View>\n          <PanelHeader />\n          {content}\n          <View style={{ padding: 20, backgroundColor: 'gray' }}>\n            <TouchableOpacity onPress={() => Lib.openUrl(forumUrl)}><Text style={{ textAlign: 'center', color: '#ddd' }}>\n              COMMUNITY FORUM\n            </Text></TouchableOpacity>\n          </View>\n        </View>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { View, Dimensions, Text } from 'react-native';\n\nimport Game from './game/Home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      landscape: false,\n      w: Dimensions.get('window').width\n    };\n  }\n\n  async componentDidMount() {\n    const ww = Dimensions.get('window').width;\n    const wh = Dimensions.get('window').height;\n    if (ww > wh) {\n      this.setState({ landscape: true, w: wh });\n    }\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    const ww = Dimensions.get('window').width;\n    const wh = Dimensions.get('window').height;\n    const landscape = (ww > wh);\n\n    let w = ww;\n    let h = wh;\n    let screen;\n    if (landscape) {\n      w = wh * 480 / 800;\n      screen = (\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ width: w, height: h }}>\n            <Game />\n          </View>\n        </View>\n      );\n    } else {\n      screen = (\n        <View style={{ width: w, height: h }}>\n          <Game />\n        </View>\n      );\n    }\n    return (\n      <>\n        <style type=\"text/css\">{`\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url(${require('react-native-vector-icons/Fonts/MaterialIcons.ttf')}) format('truetype');\n          }\n        `}</style>\n\n        {screen}\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const imgData = [\n  { name: 'Lu Bu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632762968/RTK/lubup.png' },\n  { name: 'Guan Yu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819298/RTK/guanyup.png' },\n  { name: 'Zhao Yun', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632762627/RTK/zhaoyunp.png' },\n  { name: 'Zhang Fei', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819413/RTK/zhangfeip.png' },\n  { name: 'Ma Chao', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819068/RTK/machaop.png' },\n  { name: 'Huang Zhong', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819155/RTK/huangzhongp.png' },\n  { name: 'Gan Ning', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819726/RTK/ganningp.png' },\n  { name: 'Sun Ce', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819602/RTK/suncep.png' },\n  { name: 'Zhou Yu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819935/RTK/zhouyup.png' },\n  { name: 'Taishi Ci', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820109/RTK/taishicip.png' },\n  { name: 'Xiahou Dun', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820249/RTK/xiahoudunp.png' },\n  { name: 'Zhang Liao', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820352/RTK/zhangliaop.png' },\n  { name: 'Xu Zhu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820533/RTK/xuzhup.png' },\n  { name: 'Xu Huang', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632838780/RTK/xuhuangp.png' },\n  { name: 'Cao Ren', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632838654/RTK/caorenp.png' },\n  { name: 'Dian Wei', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632838970/RTK/dianweip.png' },\n  { name: 'Xiahou Yuan', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839119/RTK/xiahouyuanp.png' },\n  { name: 'Guan Ping', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839212/RTK/guanpingp.png' },\n  { name: 'Cao Hong', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839335/RTK/caohongp.png' },\n  { name: 'Yue Jin', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839449/RTK/yuejinp.png' },\n  { name: 'Huang Gai', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839553/RTK/huanggaip.png' },\n  { name: 'Lu Meng', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632842014/RTK/lumengp.png' },\n  { name: 'Pang De', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632841890/RTK/pangdep.png' },\n  { name: 'Li Dian', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839708/RTK/lidianp.png' },\n  { name: 'Wei Yan', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632821284/weiyanp_zmouyj.png' },\n];\n\nlet index = 0;\nfor (let i = 0; i < imgData.length; i++) {\n  let j = i % 5;\n  let star = 5 - j;\n  const chances = [1, 7, 13, 19, 60];\n  const basePowers = [140000, 12000, 1100, 105, 10];\n  const mints = [10000, 1000, 100, 10, 1];\n\n  imgData[i].star = star;\n  imgData[i].power = basePowers[index] * star;\n  imgData[i].chance = chances[j];\n  imgData[i].mintFee = mints[index];\n  if (star === 1) index++;\n\n}\n\nconsole.log(imgData);\nmodule.exports = {\n  GAS: 'CFX',\n  USDT: 'USDT',\n  TOKEN: 'DT',\n  TOKEN_NAME: 'Dragon Token',\n  IMG_WIDE: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632763354/RTK/lubuwidep.png',\n  IMG_DATA: imgData,\n};\n\n\n","const Toastify = require('toastify-js');\nrequire('toastify-js/src/toastify.css');\n\nasync function showToast(msg) {\n  Toastify({\n    backgroundColor: 'black',\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    text: msg\n  }).showToast();\n}\n\nasync function delay(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  })\n}\n\n// async function getLogger() {\n//   return console;\n// }\n\nasync function getStorageValue(key) {\n  const val = window.localStorage.getItem(key);\n  return val;\n}\n\nasync function setStorageValue(key, val) {\n  window.localStorage.setItem(key, val);\n}\n\n// async function clearStorageValue() {\n//   window.localStorage.clear();\n// }\n\nfunction openUrl(url) {\n  const win = window.open(url, '_blank');\n  win.focus();\n}\n\nfunction remainingText(seconds) {\n  let secs = seconds;\n  let numDays = Math.floor(secs / (3600 * 24));\n  secs = secs - (numDays * 3600 * 24);\n  let numHours = Math.floor(secs / 3600);\n  secs = secs - (numHours * 3600);\n  let numMinute = Math.floor(secs / 60);\n  secs = secs - (numMinute * 60);\n  let numSeconds = secs;\n  let ret = '';\n  if (numDays > 0) ret += (numDays + ' days ');\n  if (numHours > 0) ret += (numHours + ' hours ');\n  if (numMinute > 0) ret += (numMinute + ' minutes ');\n  if (numSeconds > 0) ret += (numSeconds + ' seconds');\n  return ret;\n}\n\nmodule.exports = {\n  delay,\n  openUrl,\n  showToast,\n  getStorageValue,\n  setStorageValue,\n  remainingText\n};\n\n"],"sourceRoot":""}