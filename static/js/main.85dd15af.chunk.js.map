{"version":3,"sources":["game/PanelHeader.js","game/PanelWarriors.js","game/PanelAbout.js","game/PanelMenu.js","game/PanelSell.js","game/PanelMint.js","game/PanelManage.js","game/Home.js","App.js","serviceWorker.js","index.js","Lib.js","Data.js","BlockLib.js"],"names":["showToast","Lib","getStorageValue","setStorageValue","clearStorageValue","require","USDT","IMG_DATA","TOKEN","GAS","TOKEN_NAME","isWalletAvailable","connectToWallet","subscribeWalletData","publishWalletData","PanelHeader","props","state","show","this","busy","interval","setInterval","refresh","available","haveConnectedBefore","connectWallet","console","error","message","toUpperCase","setState","clearInterval","data","usdt","token","gas","right","View","style","alignItems","ActivityIndicator","Text","color","title","onPress","padding","backgroundColor","flexDirection","justifyContent","textAlign","fontWeight","React","Component","IMG_WIDE","PanelWarriors","s","fontSize","key","index","flex","ImageBackground","source","uri","url","resizeMode","name","power","mint","chance","imgData","rows1d","i","length","id","mintFee","img","push","rows2d","cells","rows","map","cols","cell","renderCell","PanelAbout","msg","PanelMenu","isConnectedToNetwork","handleShow","ss","paddingVertical","size","tokenToCoin","getFloorPrice","sell","getAllowanceSell","approveSell","openExplorerTx","PanelReward","modalVisible","floorPrice","sellAmount","coinReceived","allowSell","refreshAllowance","a","value","amount","txHash","indicator","type","isVisible","onBackdropPress","approveDisabled","Number","sellDisabled","renderModal","placeholder","onChangeText","setSellAmount","keyboardType","disabled","handleApprove","width","handleSell","handleHome","getAllowanceMint","approveMint","mintingFee","startIndex","allowMint","item","marginHorizontal","rounded","pctg","mintEnabled","mintDisabled","arr1","ii","arr2","checked","selectMintingFee","iconType","checkedIcon","uncheckedIcon","renderChance","approve","handleMint","remainingText","burn","getOwnedNFT","getNextSessionTime","openExplorerNft","retrieveReward","PanelManage","currentIndex","nfts","nextSessionTime","ticker","newTicker","dataList","nftId","earning","renderBusy","totalIndex","content","enablePrev","enableNext","enableExplore","enableEarn","enableBurn","earningMsg","burningMsg","btnBurnText","noPenaltyTime","collateral","remainingSecsEarning","remainingSecsPenalty","now","moment","unix","format","txt","Image","height","handleRetrieveReward","handleBurn","theme","colors","primary","Home","json","renderError","Dimensions","get","ScrollView","PanelMint","PanelSell","TouchableOpacity","openUrl","App","landscape","w","ww","wh","screen","h","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","Toastify","gravity","position","text","ms","Promise","resolve","reject","setTimeout","val","localStorage","getItem","setItem","clear","delay","open","focus","seconds","secs","numDays","Math","floor","numHours","numMinute","ret","j","star","module","exports","cfx","account","cusdtContract","tokenContract","warriorContract","warContract","mountainContract","CUSDT_ADDRESS","ethers","BigNumber","constants","MaxUint256","TESTNET","TOKEN_ADDRESS","WARRIOR_ADDRESS","WAR_ADDRESS","MOUNTAIN_ADDRESS","ERC20_ABI","abi","WARRIOR_ABI","WAR_ABI","MOUNTAIN_ABI","conflux","isConfluxPortal","Conflux","networkId","provider","send","accounts","Contract","address","Error","getWalletData","getBalance","gasBalance","utils","formatEther","toString","balanceOf","cusdtBalance","tokenBalance","walletDataSubscribers","cb","approveAmount","parseUnits","sendTransaction","from","executed","tx","transactionHash","allowance","amountCoin","summon","price","amountToken","buyBack","num","tokenOfOwnerByIndex","getNftStat","stat","getStat","ts","rarity","getTotalReward","log","withdrawReward","unsummon"],"mappings":"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","file":"static/js/main.85dd15af.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button } from 'react-native-elements';\nimport Lib from '../Lib';\n\nconst { showToast, getStorageValue, setStorageValue, clearStorageValue } = Lib;\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME, GAS } = require('../Data');\nconst { isWalletAvailable, connectToWallet, subscribeWalletData, publishWalletData } = require('../BlockLib');\n\nclass PanelHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.busy = false;\n    this.interval = setInterval(() => this.refresh(), 3000);\n    try {\n      const available = await isWalletAvailable();\n      const haveConnectedBefore = await getStorageValue('HAVE_CONNECTED_BEFORE');\n      if (available && haveConnectedBefore) {\n        return await this.connectWallet();\n      }\n    } catch (err) {\n      // todo: popup error\n      console.error(err);\n      if (err.message) showToast(err.message.toUpperCase());\n    }\n\n    await clearStorageValue();\n    this.setState({\n      show: 'disconnected'\n    });\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async refresh() {\n    if (this.state.show !== 'connected') return;\n    if (this.busy) return;\n    this.busy = true;\n\n    // todo here ??\n\n    this.busy = false;\n  }\n\n  async connectWallet() {\n    this.setState({ show: 'busy' });\n    try {\n      await connectToWallet();\n      await setStorageValue('HAVE_CONNECTED_BEFORE', true);\n      subscribeWalletData((data) => {\n        this.setState({\n          show: 'connected',\n          usdt: data.usdt,\n          token: data.token,\n          gas: data.gas\n        });\n      })\n      return await publishWalletData();\n    } catch (err) {\n      // todo: popup error\n      console.error(err);\n      if (err.message) showToast(err.message.toUpperCase());\n    }\n\n    await clearStorageValue();\n    this.setState({\n      show: 'disconnected'\n    });\n  }\n\n  render() {\n    let right;\n\n    if (this.state.show === 'busy') {\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <ActivityIndicator />\n        </View>\n      );\n    } else if (this.state.show === 'connected') {\n      const token = this.state.token;\n      const usdt = this.state.usdt;\n      const gas = this.state.gas;\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <Text style={{ color: 'white' }}>CONNECTED</Text>\n          <Text style={{ color: 'white' }}>{token} {TOKEN} | {usdt} {USDT} | {gas} {GAS}</Text>\n        </View>\n      );\n    } else {\n      right = (\n        <View style={{ alignItems: 'flex-end' }}>\n          <Button title=\"CONNECT\" onPress={() => this.connectWallet()} />\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ padding: 20, backgroundColor: 'gray' }}>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n          <View>\n            <Text style={{ textAlign: 'left', color: 'white', fontWeight: 'bold' }}>RTK WARRIORS</Text>\n          </View>\n          {right}\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelHeader;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator, ImageBackground } from 'react-native';\nimport { CheckBox, Button, Avatar } from 'react-native-elements';\n\nconst { IMG_DATA, IMG_WIDE, USDT } = require('../Data');\n\nclass PanelWarriors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  renderCell(data) {\n    const s = { textAlign: 'center', fontSize: 10, color: 'white', fontWeight: 'bold' };\n\n    return (\n      <View key={data.index} style={{ flex: 1, padding: 10 }}>\n        <ImageBackground source={{\n          uri: data.url,\n        }} resizeMode=\"cover\" style={{ padding: 10 }}>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text> </Text>\n          <Text style={s}>{data.name.toUpperCase()}</Text>\n          <Text style={s}>POWER: {data.power}</Text>\n          <Text style={s}>{data.mint} {USDT}</Text>\n          <Text style={s}>{data.chance}%</Text>\n        </ImageBackground>\n      </View>\n    );\n  }\n\n  render() {\n    const imgData = IMG_DATA;\n    const rows1d = [];\n\n    for (let i = 0; i < imgData.length; i++) {\n      const id = imgData[i];\n      const name = id.name;\n      const mint = id.mintFee;\n      const power = id.power;\n      const chance = id.chance;\n\n      let url = id.img;\n\n      if (i === 0) {\n        url = IMG_WIDE;\n      }\n\n      rows1d.push({ index: i, name, power, mint, chance, url });\n\n    }\n\n    let rows2d = [];\n    let cells = [];\n    for (let i = 0; i < rows1d.length; i++) {\n      cells.push(rows1d[i]);\n      if (i == 0) {\n        rows2d.push(cells);\n        cells = [];\n      } else {\n        if (cells.length === 3) {\n          rows2d.push(cells);\n          cells = [];\n        }\n      }\n    }\n\n    if (cells.length > 0) {\n      rows2d.push(cells);\n    }\n\n    const rows = rows2d;\n\n    return (\n      <View style={{ backgroundColor: 'gainsboro' }}>\n        {rows.map((cols, index) =>\n          <View key={index} style={{ flexDirection: 'row' }}>\n            {cols.map((cell) => this.renderCell(cell))}\n          </View>\n        )}\n      </View>\n    );\n  }\n\n}\n\nexport default PanelWarriors;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button } from 'react-native-elements';\n\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\n\nclass PanelAbout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    const msg = 'RTK Warriors are NFT collections that generate ' + TOKEN_NAME + ' (' + TOKEN + ') based on its rarity. RTK Warriors also return 100% minting cost when burned.';\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        <Text style={{ textAlign: 'center', fontWeight: 'bold' }}>ABOUT</Text>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>{msg.toUpperCase()}</Text>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelAbout;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button, Icon } from 'react-native-elements';\nimport { isConnectedToNetwork } from '../BlockLib';\nimport Lib from '../Lib';\n\nconst { showToast, getStorageValue, setStorageValue } = Lib;\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\n\nclass PanelMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'game' });\n  }\n\n  componentWillMount() {\n  }\n\n  async handleShow(show) {\n    const isConnected = await isConnectedToNetwork();\n    if (!isConnected) {\n      return showToast('NOT CONNECTED TO NETWORK');\n    }\n    this.props.handleShow(show)\n  }\n\n  render() {\n    const ss = { flex: 1, justifyContent: 'center', paddingVertical: 10 };\n    return (\n      <View style={{ padding: 5, backgroundColor: '#eee' }}>\n        <View style={{ flexDirection: 'row', alignItems: 'stretch' }}>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='collections' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>OWNED WARRIORS</Text></View>\n            <Button title=\"MANAGE\" onPress={() => this.handleShow('MANAGE')} />\n          </View>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='account-circle' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>NEW WARRIOR</Text></View>\n            <Button title=\"MINT\" onPress={() => this.handleShow('MINT')} />\n          </View>\n          <View style={{ flex: 1, padding: 5 }}>\n            <Icon name='account-balance-wallet' size={40} />\n            <View style={ss}><Text style={{ textAlign: 'center' }}>{TOKEN_NAME.toUpperCase()}</Text></View>\n            <Button title=\"SWAP\" onPress={() => this.handleShow('SELL')} />\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelMenu;\n","import React from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport { Button, Input } from 'react-native-elements';\nimport Modal from 'modal-enhanced-react-native-web';\n\nconst { USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { tokenToCoin, getFloorPrice, sell, getAllowanceSell, approveSell, openExplorerTx, publishWalletData } = require('../BlockLib');\n\nclass PanelReward extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      modalVisible: false,\n      floorPrice: 0,\n      sellAmount: null,\n      coinReceived: 0,\n      allowSell: 0\n    };\n  }\n\n  async componentDidMount() {\n    const floorPrice = await getFloorPrice();\n    this.setState({ floorPrice, show: 'form' });\n    this.refreshAllowance();\n\n    this.interval = setInterval(async () => {\n      const floorPrice = await getFloorPrice();\n      this.setState({ floorPrice });\n    }, 5000);\n\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async setSellAmount(value) {\n    const amount = value;\n    this.setState({ sellAmount: amount });\n    const coinReceived = await tokenToCoin(amount);\n    this.setState({ coinReceived });\n  }\n\n  async refreshAllowance() {\n    const allowSell = await getAllowanceSell();\n    this.setState({ allowSell });\n  }\n\n  async handleApprove() {\n    try {\n      const sellAmount = this.state.sellAmount;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await approveSell(sellAmount);\n      this.refreshAllowance();\n      this.setState({ txHash });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleSell() {\n    const sellAmount = this.state.sellAmount;\n    this.setState({ modalVisible: true, txHash: false });\n    const txHash = await sell(sellAmount);\n    this.refreshAllowance();\n    await publishWalletData();\n    this.setState({ txHash });\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            <View>\n              {indicator}\n              <Text> </Text>\n              <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            </View>\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    let approveDisabled = false;\n    if (Number(this.state.allowSell) >= Number(this.state.sellAmount)) {\n      approveDisabled = true;\n    }\n\n    let sellDisabled = !approveDisabled;\n\n    if (this.state.sellAmount > 0) {\n    } else {\n      sellDisabled = true;\n    }\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>{TOKEN_NAME.toUpperCase()} FLOOR PRICE</Text>\n        <Text style={{ textAlign: 'center' }}>1 {TOKEN} = {this.state.floorPrice} {USDT}</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        <Input\n          placeholder={'ENTER ' + TOKEN + ' AMOUNT'}\n          onChangeText={value => this.setSellAmount(value)}\n          value={this.state.sellAmount}\n          keyboardType='numeric'\n        />\n        <Text style={{ textAlign: 'center' }}>SWAP FOR {this.state.coinReceived} {USDT}</Text>\n        <Text style={{ textAlign: 'center' }}></Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={approveDisabled} title=\"APPROVE\" onPress={() => this.handleApprove()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={sellDisabled} title=\"SWAP\" onPress={() => this.handleSell()} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelReward;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator } from 'react-native';\nimport { CheckBox, Button, Input, Avatar } from 'react-native-elements';\n\nimport Modal from 'modal-enhanced-react-native-web';\n\nconst { IMG_DATA, USDT } = require('../Data');\nconst { mint, getAllowanceMint, approveMint, openExplorerTx, publishWalletData } = require('../BlockLib');\nconst { showToast, getStorageValue, setStorageValue } = require('../Lib');\n\nclass PanelReward extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      txHash: false,\n      mintingFee: 10000,\n      startIndex: 0,\n      allowMint: 0\n    };\n  }\n\n  async componentDidMount() {\n    const allowMint = await getAllowanceMint();\n    this.setState({ show: 'form', allowMint });\n  }\n\n  componentWillMount() {\n  }\n\n  async selectMintingFee(mintingFee, index) {\n    this.setState({ mintingFee, startIndex: (index * 5) })\n  }\n\n  async approve() {\n    try {\n      const mintingFee = this.state.mintingFee;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await approveMint(mintingFee);\n      const allowMint = await getAllowanceMint();\n      this.setState({ txHash, allowMint });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleMint() {\n    try {\n      const mintingFee = this.state.mintingFee;\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await mint(mintingFee);\n      await publishWalletData();\n      const allowMint = await getAllowanceMint();\n      this.setState({ txHash, allowMint });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderChance(item) {\n    const imgData = IMG_DATA;\n    const url = imgData[(item.index + this.state.startIndex)].img;\n\n    const styleAvatar = { flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginHorizontal: 5 };\n    return (\n      <View style={styleAvatar}>\n        <Avatar\n          rounded\n          size={'large'}\n          source={{\n            uri: url\n          }}\n        />\n        <Text>{item.pctg}%</Text>\n      </View>);\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            {indicator}\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    const mintEnabled = (Number(this.state.allowMint) >= this.state.mintingFee);\n    let approveDisabled = mintEnabled;\n    let mintDisabled = !mintEnabled;\n\n    const ii = 0;\n    const arr1 = [{ pctg: 1, index: ii + 0 }, { pctg: 7, index: ii + 1 }];\n    const arr2 = [{ pctg: 13, index: ii + 2 }, { pctg: 19, index: ii + 3 }, { pctg: 60, index: ii + 4 }];\n    const arr3 = [10000, 1000, 100, 10, 1];\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>SELECT MINTING FEE</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        {arr3.map((item, index) => {\n          return (\n            <CheckBox title={item + ' ' + USDT}\n              checked={(this.state.mintingFee === item)}\n              onPress={() => this.selectMintingFee(item, index)}\n              iconType='material'\n              checkedIcon='check-box'\n              uncheckedIcon='check-box-outline-blank'\n            />\n          );\n        })}\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>CHANCE</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          {arr1.map((item) => this.renderChance(item))}\n        </View>\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          {arr2.map((item) => this.renderChance(item))}\n        </View>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>BURN LATER TO RETRIEVE 100% MINTING FEE BACK</Text>\n        <Text style={{ textAlign: 'center' }}>(5% PINALTY WHEN BURN BEFORE 30 DAYS)</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={approveDisabled} title=\"APPROVE\" onPress={() => this.approve()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={mintDisabled} title=\"MINT\" onPress={() => this.handleMint()} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelReward;\n","import React from 'react';\nimport { View, Dimensions, Text, Image, ScrollView, ActivityIndicator, ImageBackground } from 'react-native';\nimport { CheckBox, Button, Input, Avatar } from 'react-native-elements';\nimport moment from 'moment';\nimport Modal from 'modal-enhanced-react-native-web';\nimport Lib from '../Lib';\n\nconst { remainingText, showToast } = Lib;\nconst { IMG_DATA, USDT, TOKEN, TOKEN_NAME } = require('../Data');\nconst { burn, getOwnedNFT, getNextSessionTime, openExplorerNft, retrieveReward, publishWalletData, openExplorerTx } = require('../BlockLib');\n\nclass PanelManage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      currentIndex: 0,\n      nfts: [],\n      nextSessionTime: 0,\n      ticker: 0\n    };\n  }\n\n  async componentDidMount() {\n    const nfts = await getOwnedNFT();\n    const nextSessionTime = await getNextSessionTime();\n    this.setState({ show: 'list', nfts, nextSessionTime });\n    this.interval = setInterval(() => {\n      const newTicker = this.state.ticker + 1;\n      this.setState({ ticker: newTicker });\n    }, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  async refresh() {\n\n  }\n\n  async handleRetrieveReward() {\n    const dataList = this.state.nfts;\n    const currentIndex = this.state.currentIndex;\n    const nftId = dataList[currentIndex].nftId;\n\n    try {\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await retrieveReward(nftId);\n      await publishWalletData();\n      const nfts = await getOwnedNFT();\n      this.setState({ txHash, nfts });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  async handleBurn() {\n    const dataList = this.state.nfts;\n    const currentIndex = this.state.currentIndex;\n    const nftId = dataList[currentIndex].nftId;\n    const earning = Number(dataList[currentIndex].earning);\n\n    if (earning > 0) return showToast('retrieve earning first'.toUpperCase());\n\n    try {\n      this.setState({ modalVisible: true, txHash: false });\n      const txHash = await burn(nftId);\n      await publishWalletData();\n      const nfts = await getOwnedNFT();\n      this.setState({ txHash, nfts, currentIndex: 0 });\n    } catch (err) {\n      if (err && err.message) showToast(err.message);\n    }\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text> </Text>\n        <Text style={{ textAlign: 'center' }}>QUERYING OWNED NFTS</Text>\n        <Text> </Text>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  renderModal() {\n    let indicator = <ActivityIndicator />;\n    let msg = 'PROCESS TX';\n    if (this.state.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.state.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => openExplorerTx(txHash)} />\n    }\n\n    return (\n      <Modal\n        isVisible={this.state.modalVisible}\n        onBackdropPress={() => this.setState({ modalVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            <Text> </Text>\n            <View>\n              {indicator}\n              <Text> </Text>\n              <Button type=\"outline\" title='CLOSE' onPress={() => this.setState({ modalVisible: false })} />\n            </View>\n            <Text> </Text>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    if (this.state.show === 'busy') return this.renderBusy();\n    const dataList = this.state.nfts;\n\n    const totalIndex = dataList.length;\n    const currentIndex = this.state.currentIndex;\n    const nextSessionTime = this.state.nextSessionTime;\n\n    let content = (\n      <View>\n        <Text style={{ textAlign: 'center' }}>NOT OWNED ANY WARRIORS</Text>\n        <Text> </Text>\n      </View>\n    );\n    let title = 'WARRIORS OWNED (0/0)';\n\n    let enablePrev = false;\n    let enableNext = false;\n    let enableExplore = false;\n    let enableEarn = false;\n    let enableBurn = false;\n\n    let earningMsg = <Text> </Text>;\n    let burningMsg = <Text> </Text>;\n    let btnBurnText = 'BURN';\n\n    if (dataList.length > 0) {\n      const data = dataList[currentIndex];\n      const nftId = data.nftId;\n      const power = data.power;\n      const earning = Number(data.earning);\n      const noPenaltyTime = Number(data.noPenaltyTime);\n      const collateral = data.collateral;\n\n      let name;\n      let url;\n\n      const imgData = IMG_DATA;\n      for (let i = 0; i < imgData.length; i++) {\n        const id = imgData[i];\n        if (id.power === power) {\n          name = id.name;\n          url = id.img;\n        }\n      }\n\n      enablePrev = (currentIndex > 0);\n      enableNext = (currentIndex < totalIndex - 1);\n      enableExplore = true;\n      enableEarn = (earning > 0);\n      enableBurn = true;\n\n      let remainingSecsEarning = 0;\n      let remainingSecsPenalty = 0;\n\n      const now = moment().unix();\n      if (now < noPenaltyTime) {\n        remainingSecsPenalty = noPenaltyTime - now;\n      }\n      if (now < nextSessionTime) {\n        remainingSecsEarning = nextSessionTime - now;\n      }\n\n      earningMsg = (\n        <View>\n          <Text> </Text>\n          <Text style={{ textAlign: 'center' }}>EARNING WILL BE AVAILABLE AFTER</Text>\n          <Text style={{ textAlign: 'center' }}>{moment.unix(nextSessionTime).format()}</Text>\n          <Text> </Text>\n        </View>\n      );\n\n      if (earning > 0) {\n        earningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>EARNING AVAILABLE</Text>\n            <Text style={{ textAlign: 'center' }}>{earning} {TOKEN}</Text>\n            <Text> </Text>\n          </View>\n        );\n      } else if (remainingSecsEarning > 0) {\n        const txt = remainingText(remainingSecsEarning);\n        earningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>EARNING WILL BE AVAILABLE AFTER</Text>\n            <Text style={{ textAlign: 'center' }}>{txt.toUpperCase()}</Text>\n            <Text> </Text>\n          </View>\n        );\n      }\n\n      if (remainingSecsPenalty > 0) {\n        const txt = remainingText(remainingSecsPenalty);\n        burningMsg = (\n          <View>\n            <Text> </Text>\n            <Text style={{ textAlign: 'center' }}>5% BURN PENALTY APPLIED FOR NEXT</Text>\n            <Text style={{ textAlign: 'center' }}>{txt.toUpperCase()}</Text>\n            <Text> </Text>\n          </View>);\n      }\n\n      btnBurnText = 'BURN TO RECEIVE ' + collateral + ' ' + USDT;\n\n      title = 'WARRIORS OWNED (' + (currentIndex + 1) + '/' + totalIndex + ')';\n\n      content = (\n        <View style={{}}>\n          <Image source={{\n            uri: url,\n          }} resizeMode=\"contain\" style={{ padding: 10, height: 200 }} />\n          <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          </View>\n          <Text style={{ textAlign: 'center' }}> </Text>\n          <Text style={{ textAlign: 'center' }}>{name.toUpperCase()} (#{nftId})</Text>\n          <Text style={{ textAlign: 'center' }}>POWER: {power}</Text>\n          {earningMsg}\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ padding: 10, backgroundColor: '#eee' }}>\n        {this.renderModal()}\n        <Text style={{ textAlign: 'center' }}>{title}</Text>\n        <Text style={{ textAlign: 'center' }}> </Text>\n        {content}\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button disabled={!enablePrev} title=\"PREV\" onPress={() => this.setState({ currentIndex: currentIndex - 1 })} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 2 }}><Button disabled={!enableExplore} title=\"EXPLORE\" onPress={() => openExplorerNft()} /></View>\n          <View style={{ width: 10 }} />\n          <View style={{ flex: 1 }}><Button disabled={!enableNext} title=\"NEXT\" onPress={() => this.setState({ currentIndex: currentIndex + 1 })} /></View>\n        </View>\n        <Text> </Text>\n        <View style={{}}><Button disabled={!enableEarn} title=\"RETRIEVE EARNING\" onPress={() => this.handleRetrieveReward()} /></View>\n        {burningMsg}\n        <View style={{}}><Button disabled={!enableBurn} type=\"outline\" title={btnBurnText} onPress={() => this.handleBurn()} /></View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}><Button type=\"outline\" title=\"BACK\" onPress={() => this.props.handleHome()} /></View>\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default PanelManage;\n","import React from 'react';\nimport { View, Dimensions, Text, ScrollView, ActivityIndicator } from 'react-native';\nimport { ThemeProvider, Button } from 'react-native-elements';\n\nimport PanelHeader from './PanelHeader';\nimport PanelWarriors from './PanelWarriors';\nimport PanelAbout from './PanelAbout';\nimport PanelMenu from './PanelMenu';\nimport PanelSell from './PanelSell';\nimport PanelMint from './PanelMint';\nimport PanelManage from './PanelManage';\n\nimport Modal from 'modal-enhanced-react-native-web';\nimport { TouchableOpacity } from 'react-native-web';\n\nimport Lib from '../Lib';\n\nconst theme = {\n  colors: {\n    primary: 'dimgray'\n  }\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      modalVisible: false,\n      txHash: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ show: 'home' });\n  }\n\n  componentWillMount() {\n  }\n\n  renderBusy() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator />\n      </View>\n    );\n  }\n\n  handleShow(show) {\n    if (show === 'MANAGE') this.setState({ show: 'manage' });\n    else if (show === 'MINT') this.setState({ show: 'mint' });\n    else if (show === 'SELL') this.setState({ show: 'sell' });\n  }\n\n  render() {\n    const obj = this.state.json;\n    if (this.state.show === 'busy') return this.renderBusy();\n    if (this.state.show === 'error') return this.renderError();\n    const wh = Dimensions.get('window').height;\n\n    let content = (\n      <View style={{ flex: 1, backgroundColor: 'gainsboro' }}>\n        <ScrollView>\n          <PanelAbout />\n          <PanelMenu handleShow={show => this.handleShow(show)} />\n          <PanelWarriors />\n        </ScrollView>\n      </View>\n    );\n\n    if (this.state.show === 'mint') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelMint\n              handleHome={() => this.setState({ show: 'home' })}\n            />\n          </ScrollView>\n        </View>\n      );\n    } else if (this.state.show === 'sell') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelSell handleHome={() => this.setState({ show: 'home' })} />\n          </ScrollView>\n        </View>\n      );\n    } else if (this.state.show === 'manage') {\n      content = (\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <ScrollView>\n            <PanelManage handleHome={() => this.setState({ show: 'home' })} />\n          </ScrollView>\n        </View>\n      );\n    }\n\n    const forumUrl = 'https://forum.conflux.fun/t/rtk-warriors-the-first-conflux-project-built-on-top-flux/11202';\n\n    return (\n      <ThemeProvider theme={theme}>\n        <View style={{ flex: 1 }}>\n          <Modal\n            isVisible={this.state.modalVisible}\n            onBackdropPress={() => this.setState({ modalVisible: false })}\n          >\n          </Modal>\n          <View style={{ padding: 5, backgroundColor: 'red' }}>\n            <Text style={{ fontWeight: 'bold', color: 'white', textAlign: 'center', fontSize: 10 }}>TESTNET NETWORK</Text>\n          </View>\n          <PanelHeader />\n          {content}\n          <View style={{ padding: 20, backgroundColor: 'gray' }}>\n            <TouchableOpacity onPress={() => Lib.openUrl(forumUrl)}><Text style={{ textAlign: 'center', color: '#ddd' }}>\n              COMMUNITY FORUM\n            </Text></TouchableOpacity>\n          </View>\n        </View>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { View, Dimensions } from 'react-native';\n\nimport Game from './game/Home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      landscape: false,\n      w: Dimensions.get('window').width\n    };\n  }\n\n  async componentDidMount() {\n    const ww = Dimensions.get('window').width;\n    const wh = Dimensions.get('window').height;\n    if (ww > wh) {\n      this.setState({ landscape: true, w: wh });\n    }\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    const ww = Dimensions.get('window').width;\n    const wh = Dimensions.get('window').height;\n    const landscape = (ww > wh);\n\n    let w = ww;\n    let h = wh;\n    let screen;\n    if (landscape) {\n      w = wh * 480 / 800;\n      screen = (\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ width: w, height: h }}>\n            <Game />\n          </View>\n        </View>\n      );\n    } else {\n      screen = (\n        <View style={{ width: w, height: h }}>\n          <Game />\n        </View>\n      );\n    }\n    return (\n      <>\n        <style type=\"text/css\">{`\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url(${require('react-native-vector-icons/Fonts/MaterialIcons.ttf')}) format('truetype');\n          }\n        `}</style>\n\n        {screen}\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Toastify from 'toastify-js';\nimport 'toastify-js/src/toastify.css';\n\nasync function showToast(msg) {\n  Toastify({\n    backgroundColor: 'black',\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    text: msg\n  }).showToast();\n}\n\nasync function delay(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  })\n}\n\n// async function getLogger() {\n//   return console;\n// }\n\nasync function getStorageValue(key) {\n  const val = window.localStorage.getItem(key);\n  return val;\n}\n\nasync function setStorageValue(key, val) {\n  window.localStorage.setItem(key, val);\n}\n\nasync function clearStorageValue() {\n  window.localStorage.clear();\n}\n\nfunction openUrl(url) {\n  const win = window.open(url, '_blank');\n  win.focus();\n}\n\nfunction remainingText(seconds) {\n  let secs = seconds;\n  let numDays = Math.floor(secs / (3600 * 24));\n  secs = secs - (numDays * 3600 * 24);\n  let numHours = Math.floor(secs / 3600);\n  secs = secs - (numHours * 3600);\n  let numMinute = Math.floor(secs / 60);\n  secs = secs - (numMinute * 60);\n  let numSeconds = secs;\n  let ret = '';\n  if (numDays > 0) ret += (numDays + ' days ');\n  if (numHours > 0) ret += (numHours + ' hours ');\n  if (numMinute > 0) ret += (numMinute + ' minutes ');\n  if (numSeconds > 0) ret += (numSeconds + ' seconds');\n  return ret;\n}\n\nexport default {\n  delay,\n  openUrl,\n  showToast,\n  getStorageValue,\n  setStorageValue,\n  clearStorageValue,\n  remainingText\n};\n\n","const imgData = [\n  { name: 'Lu Bu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632762968/RTK/lubup.png' },\n  { name: 'Guan Yu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819298/RTK/guanyup.png' },\n  { name: 'Zhao Yun', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632762627/RTK/zhaoyunp.png' },\n  { name: 'Zhang Fei', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819413/RTK/zhangfeip.png' },\n  { name: 'Ma Chao', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819068/RTK/machaop.png' },\n  { name: 'Huang Zhong', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819155/RTK/huangzhongp.png' },\n  { name: 'Gan Ning', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819726/RTK/ganningp.png' },\n  { name: 'Sun Ce', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819602/RTK/suncep.png' },\n  { name: 'Zhou Yu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632819935/RTK/zhouyup.png' },\n  { name: 'Taishi Ci', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820109/RTK/taishicip.png' },\n  { name: 'Xiahou Dun', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820249/RTK/xiahoudunp.png' },\n  { name: 'Zhang Liao', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820352/RTK/zhangliaop.png' },\n  { name: 'Xu Zhu', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632820533/RTK/xuzhup.png' },\n  { name: 'Xu Huang', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632838780/RTK/xuhuangp.png' },\n  { name: 'Cao Ren', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632838654/RTK/caorenp.png' },\n  { name: 'Dian Wei', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632838970/RTK/dianweip.png' },\n  { name: 'Xiahou Yuan', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839119/RTK/xiahouyuanp.png' },\n  { name: 'Guan Ping', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839212/RTK/guanpingp.png' },\n  { name: 'Cao Hong', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839335/RTK/caohongp.png' },\n  { name: 'Yue Jin', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839449/RTK/yuejinp.png' },\n  { name: 'Huang Gai', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839553/RTK/huanggaip.png' },\n  { name: 'Lu Meng', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632842014/RTK/lumengp.png' },\n  { name: 'Pang De', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632841890/RTK/pangdep.png' },\n  { name: 'Li Dian', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632839708/RTK/lidianp.png' },\n  { name: 'Wei Yan', img: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632821284/weiyanp_zmouyj.png' },\n];\n\nlet index = 0;\nfor (let i = 0; i < imgData.length; i++) {\n  let j = i % 5;\n  let star = 5 - j;\n  const chances = [1, 7, 13, 19, 60];\n  const basePowers = [140000, 12000, 1100, 105, 10];\n  const mints = [10000, 1000, 100, 10, 1];\n\n  imgData[i].star = star;\n  imgData[i].power = basePowers[index] * star;\n  imgData[i].chance = chances[j];\n  imgData[i].mintFee = mints[index];\n  if (star === 1) index++;\n\n}\n\nmodule.exports = {\n  GAS: 'CFX',\n  USDT: 'USDT',\n  TOKEN: 'DT',\n  TOKEN_NAME: 'Dragon Token',\n  IMG_WIDE: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1632763354/RTK/lubuwidep.png',\n  IMG_DATA: imgData,\n};\n\n\n","import { Conflux } from 'js-conflux-sdk';\nimport { ethers } from \"ethers\";\nimport Lib from './Lib';\n\nconst BN = ethers.BigNumber;\n\nconst MAX_UINT = ethers.constants.MaxUint256;\nconst NETWORK_ID = 1;\nconst FUSDT_ADDRESS = 'cfxtest:acg57abw3cn6113xea1atrth5e496hfe5ugyxjzd30';\nconst CUSDT_ADDRESS = 'cfxtest:acgcdeewrb2gtaxynwbezyfudypzay92cegvx0gj5c';\nconst CFLUX_ADDRESS = 'cfxtest:acg8b8v1waxdkt8u0gce8ux17peepydshun3t5szue';\nconst FLUXMINT_ADDRESS = 'cfxtest:acfbmt9z8aa8bpsdz5pj0dvtnadenz6ynu627y79nw';\n\nconst TESTNET = require('./json/testnet.json');\nconst TOKEN_ADDRESS = TESTNET.TOKEN_ADDRESS;\nconst WARRIOR_ADDRESS = TESTNET.WARRIOR_ADDRESS;\nconst WAR_ADDRESS = TESTNET.WAR_ADDRESS;\nconst MOUNTAIN_ADDRESS = TESTNET.MOUNTAIN_ADDRESS;\n\nconst ERC20_ABI = require('./json/ERC20Detailed.json').abi;\nconst WARRIOR_ABI = require('./json/Warrior.json').abi;\nconst WAR_ABI = require('./json/War.json').abi;\nconst MOUNTAIN_ABI = require('./json/Mountain.json').abi;\n\nlet cfx;\nlet account;\nlet cusdtContract;\nlet tokenContract;\nlet warriorContract;\nlet warContract;\nlet mountainContract;\n\nfunction isWalletAvailable() {\n  if (typeof window.conflux !== 'undefined') {\n    return conflux.isConfluxPortal;\n  }\n  return false;\n}\n\nasync function isConnectedToNetwork() {\n  try {\n    const check = await mountainContract.tokenToCoin('1000000000000000000');\n    return true;\n  } catch (err) {\n  }\n  return false;\n}\n\nasync function connectToWallet() {\n\n  // const networkVersion = conflux.networkVersion;\n  // if (networkVersion !== NETWORK_ID) {\n  //   console.error({ networkVersion });\n  //   throw new Error('Wrong network. Please select TESTNET');\n  // }\n\n  cfx = new Conflux({\n    networkId: NETWORK_ID,\n  });\n  cfx.provider = conflux;\n  const accounts = await conflux.send(\"cfx_requestAccounts\");\n  account = accounts[0];\n  cusdtContract = cfx.Contract({ abi: ERC20_ABI, address: CUSDT_ADDRESS });\n  tokenContract = cfx.Contract({ abi: ERC20_ABI, address: TOKEN_ADDRESS });\n  warriorContract = cfx.Contract({ abi: WARRIOR_ABI, address: WARRIOR_ADDRESS });\n  warContract = cfx.Contract({ abi: WAR_ABI, address: WAR_ADDRESS });\n  mountainContract = cfx.Contract({ abi: MOUNTAIN_ABI, address: MOUNTAIN_ADDRESS });\n\n  const check = await isConnectedToNetwork();\n  if (!check) throw new Error('Not connected to network.');\n  // const tx = await cusdtContract.approve(WARRIOR_ADDRESS, MAX_UINT.toString()).sendTransaction({ from: account }).executed();\n  // const txHash = tx.transactionHash;\n  // console.log(txHash);\n\n  // try {\n  //   let logs = await warriorContract.WarriorSummoned().getLogs();\n  //   console.log(logs);\n  // } catch (err) {\n  //   console.error(err);\n  // }\n}\n\nasync function getWalletData() {\n  let gasBalance = await cfx.getBalance(account);\n  gasBalance = ethers.utils.formatEther(gasBalance.toString());\n  let cusdtBalance = await cusdtContract.balanceOf(account);\n  cusdtBalance = ethers.utils.formatEther(cusdtBalance.toString());\n  let tokenBalance = await tokenContract.balanceOf(account);\n  tokenBalance = ethers.utils.formatEther(tokenBalance.toString());\n  return {\n    address: account,\n    usdt: Math.floor(cusdtBalance * 100) / 100,\n    gas: Math.floor(gasBalance * 100) / 100,\n    token: Math.floor(tokenBalance * 100) / 100,\n  };\n}\n\nconst walletDataSubscribers = [];\n\nfunction subscribeWalletData(cb) {\n  walletDataSubscribers.push(cb);\n}\n\nasync function publishWalletData() {\n  const data = await getWalletData();\n  for (let i = 0; i < walletDataSubscribers.length; i++) {\n    const cb = walletDataSubscribers[i];\n    cb(data);\n  }\n}\n\nasync function approveMint(amount) {\n  const approveAmount = ethers.utils.parseUnits(amount + '');\n  const tx = await cusdtContract.approve(WARRIOR_ADDRESS, approveAmount.toString()).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getAllowanceMint() {\n  let allowance = await cusdtContract.allowance(account, WARRIOR_ADDRESS);\n  allowance = ethers.utils.formatEther(allowance.toString());\n  return allowance.toString();\n}\n\nasync function mint(amount) {\n  const amountCoin = ethers.utils.parseUnits(amount + '');\n  const tx = await warriorContract.summon(amountCoin).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  // const receipt = await cfx.getTransactionReceipt(txHash);\n  // console.log(receipt.logs);\n  return txHash;\n}\n\nfunction openExplorerTx(txHash) {\n  Lib.openUrl('https://testnet.confluxscan.io/transaction/' + txHash);\n}\n\nfunction openExplorerNft() {\n  const url = 'https://testnet.confluxscan.io/nft-checker/' + account;\n  Lib.openUrl(url);\n}\n\nasync function getFloorPrice() {\n  let price = await mountainContract.tokenToCoin('1000000000000000000');\n  price = ethers.utils.formatEther(price.toString());\n  return price;\n}\n\nasync function tokenToCoin(amount) {\n  if (Number(amount) > 0) {\n    const amountToken = ethers.utils.parseUnits(amount + '');\n    let price = await mountainContract.tokenToCoin(amountToken);\n    price = ethers.utils.formatEther(price.toString());\n    return price;\n  } else {\n    return 0;\n  }\n}\n\nasync function approveSell(amount) {\n  const approveAmount = ethers.utils.parseUnits(amount + '');\n  const tx = await tokenContract.approve(MOUNTAIN_ADDRESS, approveAmount.toString()).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getAllowanceSell() {\n  let allowance = await tokenContract.allowance(account, MOUNTAIN_ADDRESS);\n  allowance = ethers.utils.formatEther(allowance.toString());\n  return allowance.toString();\n}\n\nasync function sell(amount) {\n  const amountToken = ethers.utils.parseUnits(amount + '');\n  const tx = await mountainContract.buyBack(amountToken).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function getOwnedNFT() {\n  let num = await warriorContract.balanceOf(account);\n  num = Number(num.toString());\n  const rows = [];\n  for (let i = 0; i < num; i++) {\n    let nftId = await warriorContract.tokenOfOwnerByIndex(account, i);\n    nftId = Number(nftId.toString());\n    let stat = await warContract.getNftStat(nftId);\n    const power = Number(stat[2].toString());\n    stat = await warriorContract.getStat(nftId);\n    let collateral = Number(ethers.utils.formatEther(stat[1].toString()));\n    const ts = Number(stat[4].toString());\n    const rarity = Number(stat[5].toString());\n    let earning = await warContract.getTotalReward(nftId);\n    earning = Number(ethers.utils.formatEther(earning.toString()));\n    rows.push({ nftId: nftId, power: power, earning: earning, noPenaltyTime: ts, rarity, collateral });\n  }\n\n  console.log(rows);\n\n  return rows;\n}\n\nasync function getNextSessionTime() {\n  let stat = await warContract.getStat();\n  let ts = Number(stat[4].toString());\n  return ts;\n}\n\nasync function retrieveReward(nftId) {\n  const tx = await warContract.withdrawReward(nftId).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\nasync function burn(nftId) {\n  const tx = await warriorContract.unsummon(nftId).sendTransaction({ from: account }).executed();\n  const txHash = tx.transactionHash;\n  return txHash;\n}\n\n\nexport {\n  isWalletAvailable,\n  isConnectedToNetwork,\n  connectToWallet,\n  getWalletData,\n  subscribeWalletData,\n  publishWalletData,\n  getAllowanceMint,\n  approveMint,\n  mint,\n  openExplorerTx,\n  openExplorerNft,\n  tokenToCoin,\n  getFloorPrice,\n  getAllowanceSell,\n  approveSell,\n  sell,\n  getOwnedNFT,\n  getNextSessionTime,\n  retrieveReward,\n  burn\n};\n\n\n"],"sourceRoot":""}